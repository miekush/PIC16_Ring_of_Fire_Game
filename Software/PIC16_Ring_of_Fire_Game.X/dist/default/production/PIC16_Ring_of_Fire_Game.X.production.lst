

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 24 10:57:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.30
    34                           ; Generated 15/09/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F15223 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000E                     	;# 
    82  0012                     	;# 
    83  0014                     	;# 
    84  0018                     	;# 
    85  001A                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010E                     	;# 
    94  010F                     	;# 
    95  0119                     	;# 
    96  011A                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011C                     	;# 
   100  011D                     	;# 
   101  011E                     	;# 
   102  011F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  018E                     	;# 
   106  018F                     	;# 
   107  0190                     	;# 
   108  0191                     	;# 
   109  0192                     	;# 
   110  020C                     	;# 
   111  020D                     	;# 
   112  020E                     	;# 
   113  020E                     	;# 
   114  020F                     	;# 
   115  020F                     	;# 
   116  0210                     	;# 
   117  0210                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  028C                     	;# 
   121  028C                     	;# 
   122  028D                     	;# 
   123  028D                     	;# 
   124  028E                     	;# 
   125  028F                     	;# 
   126  0290                     	;# 
   127  0291                     	;# 
   128  030C                     	;# 
   129  030C                     	;# 
   130  030D                     	;# 
   131  030E                     	;# 
   132  030F                     	;# 
   133  0310                     	;# 
   134  0310                     	;# 
   135  0311                     	;# 
   136  0312                     	;# 
   137  0313                     	;# 
   138  0314                     	;# 
   139  0314                     	;# 
   140  0315                     	;# 
   141  0316                     	;# 
   142  0318                     	;# 
   143  0318                     	;# 
   144  0319                     	;# 
   145  031A                     	;# 
   146  059C                     	;# 
   147  059C                     	;# 
   148  059D                     	;# 
   149  059D                     	;# 
   150  059E                     	;# 
   151  059F                     	;# 
   152  070C                     	;# 
   153  070D                     	;# 
   154  070E                     	;# 
   155  0716                     	;# 
   156  0717                     	;# 
   157  0718                     	;# 
   158  080C                     	;# 
   159  0811                     	;# 
   160  0813                     	;# 
   161  0814                     	;# 
   162  081A                     	;# 
   163  081A                     	;# 
   164  081B                     	;# 
   165  081C                     	;# 
   166  081C                     	;# 
   167  081D                     	;# 
   168  081E                     	;# 
   169  081F                     	;# 
   170  088E                     	;# 
   171  0890                     	;# 
   172  0891                     	;# 
   173  0892                     	;# 
   174  0893                     	;# 
   175  090C                     	;# 
   176  1E8F                     	;# 
   177  1E90                     	;# 
   178  1E91                     	;# 
   179  1E92                     	;# 
   180  1E93                     	;# 
   181  1E9C                     	;# 
   182  1EA1                     	;# 
   183  1EA2                     	;# 
   184  1EC3                     	;# 
   185  1EC5                     	;# 
   186  1EC6                     	;# 
   187  1EC7                     	;# 
   188  1ECB                     	;# 
   189  1ECB                     	;# 
   190  1ECB                     	;# 
   191  1ECC                     	;# 
   192  1ECC                     	;# 
   193  1ECC                     	;# 
   194  1F10                     	;# 
   195  1F11                     	;# 
   196  1F12                     	;# 
   197  1F14                     	;# 
   198  1F15                     	;# 
   199  1F20                     	;# 
   200  1F21                     	;# 
   201  1F22                     	;# 
   202  1F23                     	;# 
   203  1F24                     	;# 
   204  1F25                     	;# 
   205  1F38                     	;# 
   206  1F39                     	;# 
   207  1F3A                     	;# 
   208  1F3B                     	;# 
   209  1F3C                     	;# 
   210  1F3D                     	;# 
   211  1F3E                     	;# 
   212  1F3F                     	;# 
   213  1F4E                     	;# 
   214  1F4F                     	;# 
   215  1F50                     	;# 
   216  1F51                     	;# 
   217  1F52                     	;# 
   218  1F53                     	;# 
   219  1F54                     	;# 
   220  1F55                     	;# 
   221  1FE4                     	;# 
   222  1FE5                     	;# 
   223  1FE6                     	;# 
   224  1FE7                     	;# 
   225  1FE8                     	;# 
   226  1FE8                     	;# 
   227  1FE9                     	;# 
   228  1FEA                     	;# 
   229  1FEB                     	;# 
   230  1FED                     	;# 
   231  1FEE                     	;# 
   232  1FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000E                     	;# 
   247  0012                     	;# 
   248  0014                     	;# 
   249  0018                     	;# 
   250  001A                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  0119                     	;# 
   261  011A                     	;# 
   262  011B                     	;# 
   263  011B                     	;# 
   264  011C                     	;# 
   265  011D                     	;# 
   266  011E                     	;# 
   267  011F                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  018E                     	;# 
   271  018F                     	;# 
   272  0190                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  020C                     	;# 
   276  020D                     	;# 
   277  020E                     	;# 
   278  020E                     	;# 
   279  020F                     	;# 
   280  020F                     	;# 
   281  0210                     	;# 
   282  0210                     	;# 
   283  0211                     	;# 
   284  0211                     	;# 
   285  028C                     	;# 
   286  028C                     	;# 
   287  028D                     	;# 
   288  028D                     	;# 
   289  028E                     	;# 
   290  028F                     	;# 
   291  0290                     	;# 
   292  0291                     	;# 
   293  030C                     	;# 
   294  030C                     	;# 
   295  030D                     	;# 
   296  030E                     	;# 
   297  030F                     	;# 
   298  0310                     	;# 
   299  0310                     	;# 
   300  0311                     	;# 
   301  0312                     	;# 
   302  0313                     	;# 
   303  0314                     	;# 
   304  0314                     	;# 
   305  0315                     	;# 
   306  0316                     	;# 
   307  0318                     	;# 
   308  0318                     	;# 
   309  0319                     	;# 
   310  031A                     	;# 
   311  059C                     	;# 
   312  059C                     	;# 
   313  059D                     	;# 
   314  059D                     	;# 
   315  059E                     	;# 
   316  059F                     	;# 
   317  070C                     	;# 
   318  070D                     	;# 
   319  070E                     	;# 
   320  0716                     	;# 
   321  0717                     	;# 
   322  0718                     	;# 
   323  080C                     	;# 
   324  0811                     	;# 
   325  0813                     	;# 
   326  0814                     	;# 
   327  081A                     	;# 
   328  081A                     	;# 
   329  081B                     	;# 
   330  081C                     	;# 
   331  081C                     	;# 
   332  081D                     	;# 
   333  081E                     	;# 
   334  081F                     	;# 
   335  088E                     	;# 
   336  0890                     	;# 
   337  0891                     	;# 
   338  0892                     	;# 
   339  0893                     	;# 
   340  090C                     	;# 
   341  1E8F                     	;# 
   342  1E90                     	;# 
   343  1E91                     	;# 
   344  1E92                     	;# 
   345  1E93                     	;# 
   346  1E9C                     	;# 
   347  1EA1                     	;# 
   348  1EA2                     	;# 
   349  1EC3                     	;# 
   350  1EC5                     	;# 
   351  1EC6                     	;# 
   352  1EC7                     	;# 
   353  1ECB                     	;# 
   354  1ECB                     	;# 
   355  1ECB                     	;# 
   356  1ECC                     	;# 
   357  1ECC                     	;# 
   358  1ECC                     	;# 
   359  1F10                     	;# 
   360  1F11                     	;# 
   361  1F12                     	;# 
   362  1F14                     	;# 
   363  1F15                     	;# 
   364  1F20                     	;# 
   365  1F21                     	;# 
   366  1F22                     	;# 
   367  1F23                     	;# 
   368  1F24                     	;# 
   369  1F25                     	;# 
   370  1F38                     	;# 
   371  1F39                     	;# 
   372  1F3A                     	;# 
   373  1F3B                     	;# 
   374  1F3C                     	;# 
   375  1F3D                     	;# 
   376  1F3E                     	;# 
   377  1F3F                     	;# 
   378  1F4E                     	;# 
   379  1F4F                     	;# 
   380  1F50                     	;# 
   381  1F51                     	;# 
   382  1F52                     	;# 
   383  1F53                     	;# 
   384  1F54                     	;# 
   385  1F55                     	;# 
   386  1FE4                     	;# 
   387  1FE5                     	;# 
   388  1FE6                     	;# 
   389  1FE7                     	;# 
   390  1FE8                     	;# 
   391  1FE8                     	;# 
   392  1FE9                     	;# 
   393  1FEA                     	;# 
   394  1FEB                     	;# 
   395  1FED                     	;# 
   396  1FEE                     	;# 
   397  1FEF                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000E                     	;# 
   412  0012                     	;# 
   413  0014                     	;# 
   414  0018                     	;# 
   415  001A                     	;# 
   416  009A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010E                     	;# 
   424  010F                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011B                     	;# 
   428  011B                     	;# 
   429  011C                     	;# 
   430  011D                     	;# 
   431  011E                     	;# 
   432  011F                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435  018E                     	;# 
   436  018F                     	;# 
   437  0190                     	;# 
   438  0191                     	;# 
   439  0192                     	;# 
   440  020C                     	;# 
   441  020D                     	;# 
   442  020E                     	;# 
   443  020E                     	;# 
   444  020F                     	;# 
   445  020F                     	;# 
   446  0210                     	;# 
   447  0210                     	;# 
   448  0211                     	;# 
   449  0211                     	;# 
   450  028C                     	;# 
   451  028C                     	;# 
   452  028D                     	;# 
   453  028D                     	;# 
   454  028E                     	;# 
   455  028F                     	;# 
   456  0290                     	;# 
   457  0291                     	;# 
   458  030C                     	;# 
   459  030C                     	;# 
   460  030D                     	;# 
   461  030E                     	;# 
   462  030F                     	;# 
   463  0310                     	;# 
   464  0310                     	;# 
   465  0311                     	;# 
   466  0312                     	;# 
   467  0313                     	;# 
   468  0314                     	;# 
   469  0314                     	;# 
   470  0315                     	;# 
   471  0316                     	;# 
   472  0318                     	;# 
   473  0318                     	;# 
   474  0319                     	;# 
   475  031A                     	;# 
   476  059C                     	;# 
   477  059C                     	;# 
   478  059D                     	;# 
   479  059D                     	;# 
   480  059E                     	;# 
   481  059F                     	;# 
   482  070C                     	;# 
   483  070D                     	;# 
   484  070E                     	;# 
   485  0716                     	;# 
   486  0717                     	;# 
   487  0718                     	;# 
   488  080C                     	;# 
   489  0811                     	;# 
   490  0813                     	;# 
   491  0814                     	;# 
   492  081A                     	;# 
   493  081A                     	;# 
   494  081B                     	;# 
   495  081C                     	;# 
   496  081C                     	;# 
   497  081D                     	;# 
   498  081E                     	;# 
   499  081F                     	;# 
   500  088E                     	;# 
   501  0890                     	;# 
   502  0891                     	;# 
   503  0892                     	;# 
   504  0893                     	;# 
   505  090C                     	;# 
   506  1E8F                     	;# 
   507  1E90                     	;# 
   508  1E91                     	;# 
   509  1E92                     	;# 
   510  1E93                     	;# 
   511  1E9C                     	;# 
   512  1EA1                     	;# 
   513  1EA2                     	;# 
   514  1EC3                     	;# 
   515  1EC5                     	;# 
   516  1EC6                     	;# 
   517  1EC7                     	;# 
   518  1ECB                     	;# 
   519  1ECB                     	;# 
   520  1ECB                     	;# 
   521  1ECC                     	;# 
   522  1ECC                     	;# 
   523  1ECC                     	;# 
   524  1F10                     	;# 
   525  1F11                     	;# 
   526  1F12                     	;# 
   527  1F14                     	;# 
   528  1F15                     	;# 
   529  1F20                     	;# 
   530  1F21                     	;# 
   531  1F22                     	;# 
   532  1F23                     	;# 
   533  1F24                     	;# 
   534  1F25                     	;# 
   535  1F38                     	;# 
   536  1F39                     	;# 
   537  1F3A                     	;# 
   538  1F3B                     	;# 
   539  1F3C                     	;# 
   540  1F3D                     	;# 
   541  1F3E                     	;# 
   542  1F3F                     	;# 
   543  1F4E                     	;# 
   544  1F4F                     	;# 
   545  1F50                     	;# 
   546  1F51                     	;# 
   547  1F52                     	;# 
   548  1F53                     	;# 
   549  1F54                     	;# 
   550  1F55                     	;# 
   551  1FE4                     	;# 
   552  1FE5                     	;# 
   553  1FE6                     	;# 
   554  1FE7                     	;# 
   555  1FE8                     	;# 
   556  1FE8                     	;# 
   557  1FE9                     	;# 
   558  1FEA                     	;# 
   559  1FEB                     	;# 
   560  1FED                     	;# 
   561  1FEE                     	;# 
   562  1FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000E                     	;# 
   577  0012                     	;# 
   578  0014                     	;# 
   579  0018                     	;# 
   580  001A                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010E                     	;# 
   589  010F                     	;# 
   590  0119                     	;# 
   591  011A                     	;# 
   592  011B                     	;# 
   593  011B                     	;# 
   594  011C                     	;# 
   595  011D                     	;# 
   596  011E                     	;# 
   597  011F                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600  018E                     	;# 
   601  018F                     	;# 
   602  0190                     	;# 
   603  0191                     	;# 
   604  0192                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  020E                     	;# 
   609  020F                     	;# 
   610  020F                     	;# 
   611  0210                     	;# 
   612  0210                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  028C                     	;# 
   616  028C                     	;# 
   617  028D                     	;# 
   618  028D                     	;# 
   619  028E                     	;# 
   620  028F                     	;# 
   621  0290                     	;# 
   622  0291                     	;# 
   623  030C                     	;# 
   624  030C                     	;# 
   625  030D                     	;# 
   626  030E                     	;# 
   627  030F                     	;# 
   628  0310                     	;# 
   629  0310                     	;# 
   630  0311                     	;# 
   631  0312                     	;# 
   632  0313                     	;# 
   633  0314                     	;# 
   634  0314                     	;# 
   635  0315                     	;# 
   636  0316                     	;# 
   637  0318                     	;# 
   638  0318                     	;# 
   639  0319                     	;# 
   640  031A                     	;# 
   641  059C                     	;# 
   642  059C                     	;# 
   643  059D                     	;# 
   644  059D                     	;# 
   645  059E                     	;# 
   646  059F                     	;# 
   647  070C                     	;# 
   648  070D                     	;# 
   649  070E                     	;# 
   650  0716                     	;# 
   651  0717                     	;# 
   652  0718                     	;# 
   653  080C                     	;# 
   654  0811                     	;# 
   655  0813                     	;# 
   656  0814                     	;# 
   657  081A                     	;# 
   658  081A                     	;# 
   659  081B                     	;# 
   660  081C                     	;# 
   661  081C                     	;# 
   662  081D                     	;# 
   663  081E                     	;# 
   664  081F                     	;# 
   665  088E                     	;# 
   666  0890                     	;# 
   667  0891                     	;# 
   668  0892                     	;# 
   669  0893                     	;# 
   670  090C                     	;# 
   671  1E8F                     	;# 
   672  1E90                     	;# 
   673  1E91                     	;# 
   674  1E92                     	;# 
   675  1E93                     	;# 
   676  1E9C                     	;# 
   677  1EA1                     	;# 
   678  1EA2                     	;# 
   679  1EC3                     	;# 
   680  1EC5                     	;# 
   681  1EC6                     	;# 
   682  1EC7                     	;# 
   683  1ECB                     	;# 
   684  1ECB                     	;# 
   685  1ECB                     	;# 
   686  1ECC                     	;# 
   687  1ECC                     	;# 
   688  1ECC                     	;# 
   689  1F10                     	;# 
   690  1F11                     	;# 
   691  1F12                     	;# 
   692  1F14                     	;# 
   693  1F15                     	;# 
   694  1F20                     	;# 
   695  1F21                     	;# 
   696  1F22                     	;# 
   697  1F23                     	;# 
   698  1F24                     	;# 
   699  1F25                     	;# 
   700  1F38                     	;# 
   701  1F39                     	;# 
   702  1F3A                     	;# 
   703  1F3B                     	;# 
   704  1F3C                     	;# 
   705  1F3D                     	;# 
   706  1F3E                     	;# 
   707  1F3F                     	;# 
   708  1F4E                     	;# 
   709  1F4F                     	;# 
   710  1F50                     	;# 
   711  1F51                     	;# 
   712  1F52                     	;# 
   713  1F53                     	;# 
   714  1F54                     	;# 
   715  1F55                     	;# 
   716  1FE4                     	;# 
   717  1FE5                     	;# 
   718  1FE6                     	;# 
   719  1FE7                     	;# 
   720  1FE8                     	;# 
   721  1FE8                     	;# 
   722  1FE9                     	;# 
   723  1FEA                     	;# 
   724  1FEB                     	;# 
   725  1FED                     	;# 
   726  1FEE                     	;# 
   727  1FEF                     	;# 
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000E                     	;# 
   742  0012                     	;# 
   743  0014                     	;# 
   744  0018                     	;# 
   745  001A                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  009F                     	;# 
   753  010E                     	;# 
   754  010F                     	;# 
   755  0119                     	;# 
   756  011A                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011C                     	;# 
   760  011D                     	;# 
   761  011E                     	;# 
   762  011F                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  018E                     	;# 
   766  018F                     	;# 
   767  0190                     	;# 
   768  0191                     	;# 
   769  0192                     	;# 
   770  020C                     	;# 
   771  020D                     	;# 
   772  020E                     	;# 
   773  020E                     	;# 
   774  020F                     	;# 
   775  020F                     	;# 
   776  0210                     	;# 
   777  0210                     	;# 
   778  0211                     	;# 
   779  0211                     	;# 
   780  028C                     	;# 
   781  028C                     	;# 
   782  028D                     	;# 
   783  028D                     	;# 
   784  028E                     	;# 
   785  028F                     	;# 
   786  0290                     	;# 
   787  0291                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0318                     	;# 
   803  0318                     	;# 
   804  0319                     	;# 
   805  031A                     	;# 
   806  059C                     	;# 
   807  059C                     	;# 
   808  059D                     	;# 
   809  059D                     	;# 
   810  059E                     	;# 
   811  059F                     	;# 
   812  070C                     	;# 
   813  070D                     	;# 
   814  070E                     	;# 
   815  0716                     	;# 
   816  0717                     	;# 
   817  0718                     	;# 
   818  080C                     	;# 
   819  0811                     	;# 
   820  0813                     	;# 
   821  0814                     	;# 
   822  081A                     	;# 
   823  081A                     	;# 
   824  081B                     	;# 
   825  081C                     	;# 
   826  081C                     	;# 
   827  081D                     	;# 
   828  081E                     	;# 
   829  081F                     	;# 
   830  088E                     	;# 
   831  0890                     	;# 
   832  0891                     	;# 
   833  0892                     	;# 
   834  0893                     	;# 
   835  090C                     	;# 
   836  1E8F                     	;# 
   837  1E90                     	;# 
   838  1E91                     	;# 
   839  1E92                     	;# 
   840  1E93                     	;# 
   841  1E9C                     	;# 
   842  1EA1                     	;# 
   843  1EA2                     	;# 
   844  1EC3                     	;# 
   845  1EC5                     	;# 
   846  1EC6                     	;# 
   847  1EC7                     	;# 
   848  1ECB                     	;# 
   849  1ECB                     	;# 
   850  1ECB                     	;# 
   851  1ECC                     	;# 
   852  1ECC                     	;# 
   853  1ECC                     	;# 
   854  1F10                     	;# 
   855  1F11                     	;# 
   856  1F12                     	;# 
   857  1F14                     	;# 
   858  1F15                     	;# 
   859  1F20                     	;# 
   860  1F21                     	;# 
   861  1F22                     	;# 
   862  1F23                     	;# 
   863  1F24                     	;# 
   864  1F25                     	;# 
   865  1F38                     	;# 
   866  1F39                     	;# 
   867  1F3A                     	;# 
   868  1F3B                     	;# 
   869  1F3C                     	;# 
   870  1F3D                     	;# 
   871  1F3E                     	;# 
   872  1F3F                     	;# 
   873  1F4E                     	;# 
   874  1F4F                     	;# 
   875  1F50                     	;# 
   876  1F51                     	;# 
   877  1F52                     	;# 
   878  1F53                     	;# 
   879  1F54                     	;# 
   880  1F55                     	;# 
   881  1FE4                     	;# 
   882  1FE5                     	;# 
   883  1FE6                     	;# 
   884  1FE7                     	;# 
   885  1FE8                     	;# 
   886  1FE8                     	;# 
   887  1FE9                     	;# 
   888  1FEA                     	;# 
   889  1FEB                     	;# 
   890  1FED                     	;# 
   891  1FEE                     	;# 
   892  1FEF                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0008                     	;# 
   902  0009                     	;# 
   903  000A                     	;# 
   904  000B                     	;# 
   905  000C                     	;# 
   906  000E                     	;# 
   907  0012                     	;# 
   908  0014                     	;# 
   909  0018                     	;# 
   910  001A                     	;# 
   911  009A                     	;# 
   912  009B                     	;# 
   913  009B                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  009F                     	;# 
   918  010E                     	;# 
   919  010F                     	;# 
   920  0119                     	;# 
   921  011A                     	;# 
   922  011B                     	;# 
   923  011B                     	;# 
   924  011C                     	;# 
   925  011D                     	;# 
   926  011E                     	;# 
   927  011F                     	;# 
   928  018C                     	;# 
   929  018D                     	;# 
   930  018E                     	;# 
   931  018F                     	;# 
   932  0190                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  020C                     	;# 
   936  020D                     	;# 
   937  020E                     	;# 
   938  020E                     	;# 
   939  020F                     	;# 
   940  020F                     	;# 
   941  0210                     	;# 
   942  0210                     	;# 
   943  0211                     	;# 
   944  0211                     	;# 
   945  028C                     	;# 
   946  028C                     	;# 
   947  028D                     	;# 
   948  028D                     	;# 
   949  028E                     	;# 
   950  028F                     	;# 
   951  0290                     	;# 
   952  0291                     	;# 
   953  030C                     	;# 
   954  030C                     	;# 
   955  030D                     	;# 
   956  030E                     	;# 
   957  030F                     	;# 
   958  0310                     	;# 
   959  0310                     	;# 
   960  0311                     	;# 
   961  0312                     	;# 
   962  0313                     	;# 
   963  0314                     	;# 
   964  0314                     	;# 
   965  0315                     	;# 
   966  0316                     	;# 
   967  0318                     	;# 
   968  0318                     	;# 
   969  0319                     	;# 
   970  031A                     	;# 
   971  059C                     	;# 
   972  059C                     	;# 
   973  059D                     	;# 
   974  059D                     	;# 
   975  059E                     	;# 
   976  059F                     	;# 
   977  070C                     	;# 
   978  070D                     	;# 
   979  070E                     	;# 
   980  0716                     	;# 
   981  0717                     	;# 
   982  0718                     	;# 
   983  080C                     	;# 
   984  0811                     	;# 
   985  0813                     	;# 
   986  0814                     	;# 
   987  081A                     	;# 
   988  081A                     	;# 
   989  081B                     	;# 
   990  081C                     	;# 
   991  081C                     	;# 
   992  081D                     	;# 
   993  081E                     	;# 
   994  081F                     	;# 
   995  088E                     	;# 
   996  0890                     	;# 
   997  0891                     	;# 
   998  0892                     	;# 
   999  0893                     	;# 
  1000  090C                     	;# 
  1001  1E8F                     	;# 
  1002  1E90                     	;# 
  1003  1E91                     	;# 
  1004  1E92                     	;# 
  1005  1E93                     	;# 
  1006  1E9C                     	;# 
  1007  1EA1                     	;# 
  1008  1EA2                     	;# 
  1009  1EC3                     	;# 
  1010  1EC5                     	;# 
  1011  1EC6                     	;# 
  1012  1EC7                     	;# 
  1013  1ECB                     	;# 
  1014  1ECB                     	;# 
  1015  1ECB                     	;# 
  1016  1ECC                     	;# 
  1017  1ECC                     	;# 
  1018  1ECC                     	;# 
  1019  1F10                     	;# 
  1020  1F11                     	;# 
  1021  1F12                     	;# 
  1022  1F14                     	;# 
  1023  1F15                     	;# 
  1024  1F20                     	;# 
  1025  1F21                     	;# 
  1026  1F22                     	;# 
  1027  1F23                     	;# 
  1028  1F24                     	;# 
  1029  1F25                     	;# 
  1030  1F38                     	;# 
  1031  1F39                     	;# 
  1032  1F3A                     	;# 
  1033  1F3B                     	;# 
  1034  1F3C                     	;# 
  1035  1F3D                     	;# 
  1036  1F3E                     	;# 
  1037  1F3F                     	;# 
  1038  1F4E                     	;# 
  1039  1F4F                     	;# 
  1040  1F50                     	;# 
  1041  1F51                     	;# 
  1042  1F52                     	;# 
  1043  1F53                     	;# 
  1044  1F54                     	;# 
  1045  1F55                     	;# 
  1046  1FE4                     	;# 
  1047  1FE5                     	;# 
  1048  1FE6                     	;# 
  1049  1FE7                     	;# 
  1050  1FE8                     	;# 
  1051  1FE8                     	;# 
  1052  1FE9                     	;# 
  1053  1FEA                     	;# 
  1054  1FEB                     	;# 
  1055  1FED                     	;# 
  1056  1FEE                     	;# 
  1057  1FEF                     	;# 
  1058                           
  1059                           	psect	idataBANK0
  1060  02B7                     __pidataBANK0:
  1061                           
  1062                           ;initializer for _ledPeriod
  1063  02B7  3432               	retlw	50
  1064  02B8  3400               	retlw	0
  1065                           
  1066                           ;initializer for _ledReg
  1067  02B9  3401               	retlw	1
  1068  02BA  3400               	retlw	0
  1069                           
  1070                           	psect	nvBANK0
  1071  002D                     __pnvBANK0:
  1072  002D                     _TMR0_InterruptHandler:
  1073  002D                     	ds	2
  1074  002F                     _TMR2_InterruptHandler:
  1075  002F                     	ds	2
  1076  000E                     _PORTC	set	14
  1077  000C                     _PORTA	set	12
  1078  0014                     _TRISC	set	20
  1079  0012                     _TRISA	set	18
  1080  001A                     _LATC	set	26
  1081  0018                     _LATA	set	24
  1082  000B                     _INTCONbits	set	11
  1083  0065                     _RA5	set	101
  1084  028D                     _PR2	set	653
  1085  028C                     _TMR2	set	652
  1086  028E                     _T2CONbits	set	654
  1087  0291                     _T2RSTbits	set	657
  1088  028F                     _T2HLTbits	set	655
  1089  028E                     _T2CON	set	654
  1090  028C                     _T2TMR	set	652
  1091  028D                     _T2PR	set	653
  1092  0291                     _T2RST	set	657
  1093  028F                     _T2HLT	set	655
  1094  0290                     _T2CLKCON	set	656
  1095  059E                     _T0CON0bits	set	1438
  1096  059E                     _T0CON0	set	1438
  1097  059C                     _TMR0L	set	1436
  1098  059D                     _TMR0H	set	1437
  1099  059F                     _T0CON1	set	1439
  1100  070D                     _PIR1bits	set	1805
  1101  0717                     _PIE1bits	set	1815
  1102  070C                     _PIR0bits	set	1804
  1103  0716                     _PIE0bits	set	1814
  1104  080C                     _WDTCON	set	2060
  1105  0892                     _OSCTUNE	set	2194
  1106  0893                     _OSCFRQ	set	2195
  1107  0891                     _OSCEN	set	2193
  1108  1E9C                     _T2INPPS	set	7836
  1109  1F52                     _INLVLC	set	8018
  1110  1F3C                     _INLVLA	set	7996
  1111  1F51                     _SLRCONC	set	8017
  1112  1F3B                     _SLRCONA	set	7995
  1113  1F50                     _ODCONC	set	8016
  1114  1F3A                     _ODCONA	set	7994
  1115  1F4F                     _WPUC	set	8015
  1116  1F39                     _WPUA	set	7993
  1117  1F38                     _ANSELA	set	7992
  1118  1F4E                     _ANSELC	set	8014
  1119                           
  1120                           	psect	cinit
  1121  0026                     start_initialization:	
  1122                           ; #config settings
  1123                           
  1124  0026                     __initialization:
  1125                           
  1126                           ; Initialize objects allocated to BANK0
  1127  0026  3182  22B7  3180   	fcall	__pidataBANK0	;fetch initializer
  1128  0029  00B1               	movwf	__pdataBANK0& (0+127)
  1129  002A  3182  22B8  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1130  002D  00B2               	movwf	(__pdataBANK0+1)& (0+127)
  1131  002E  3182  22B9  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1132  0031  00B3               	movwf	(__pdataBANK0+2)& (0+127)
  1133  0032  3182  22BA  3180   	fcall	__pidataBANK0+3	;fetch initializer
  1134  0035  00B4               	movwf	(__pdataBANK0+3)& (0+127)
  1135                           
  1136                           ; Clear objects allocated to BANK0
  1137  0036  3020               	movlw	low __pbssBANK0
  1138  0037  0084               	movwf	4
  1139  0038  3000               	movlw	high __pbssBANK0
  1140  0039  0085               	movwf	5
  1141  003A  300D               	movlw	13
  1142  003B  3182  22A0  3180   	fcall	clear_ram0
  1143  003E                     end_of_initialization:	
  1144                           ;End of C runtime variable initialization code
  1145                           
  1146  003E                     __end_of__initialization:
  1147  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1148  003F  0140               	movlb	0
  1149  0040  2841               	ljmp	_main	;jump to C main() function
  1150                           
  1151                           	psect	bssBANK0
  1152  0020                     __pbssBANK0:
  1153  0020                     _buttonDuration:
  1154  0020                     	ds	2
  1155  0022                     _buttonCount:
  1156  0022                     	ds	2
  1157  0024                     _blinkCount:
  1158  0024                     	ds	2
  1159  0026                     _ledCount:
  1160  0026                     	ds	2
  1161  0028                     _gameState:
  1162  0028                     	ds	2
  1163  002A                     _speedReg:
  1164  002A                     	ds	2
  1165  002C                     _buttonFlag:
  1166  002C                     	ds	1
  1167                           
  1168                           	psect	dataBANK0
  1169  0031                     __pdataBANK0:
  1170  0031                     _ledPeriod:
  1171  0031                     	ds	2
  1172  0033                     _ledReg:
  1173  0033                     	ds	2
  1174                           
  1175                           	psect	clrtext
  1176  02A0                     clear_ram0:	
  1177                           ;	Called with FSR0 containing the base address, and
  1178                           ;	WREG with the size to clear
  1179                           
  1180  02A0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1181  02A1                     clrloop0:
  1182  02A1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1183  02A2  3101               	addfsr 0,1
  1184  02A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1185  02A4  2AA1               	goto	clrloop0	;have we reached the end yet?
  1186  02A5  3400               	retlw	0	;all done for this memory range, return
  1187                           
  1188                           	psect	cstackCOMMON
  1189  0070                     __pcstackCOMMON:
  1190  0070                     ?_TMR0_ISR:
  1191  0070                     ??_TMR0_ISR:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_TMR2_ISR:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ??_TMR2_ISR:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_TMR2_SetInterruptHandler:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_TMR2_DefaultInterruptHandler:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ??_TMR2_DefaultInterruptHandler:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_TMR0_SetInterruptHandler:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_TMR0_DefaultInterruptHandler:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ??_TMR0_DefaultInterruptHandler:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_OSCILLATOR_Initialize:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ??_OSCILLATOR_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_WDT_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ??_WDT_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_timerISR:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ??_timerISR:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_buttonISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ??_buttonISR:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_processButton:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ??_processButton:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_INTERRUPT_InterruptManager:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ??_INTERRUPT_InterruptManager:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_PIN_MANAGER_Initialize:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ??_PIN_MANAGER_Initialize:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_TMR2_Initialize:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_TMR0_Initialize:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_SYSTEM_Initialize:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_main:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?___awdiv:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  1276                           ; 2 bytes @ 0x0
  1277                           
  1278  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  1279                           ; 2 bytes @ 0x0
  1280                           
  1281  0070                     ___awdiv@divisor:	
  1282                           ; 2 bytes @ 0x0
  1283                           
  1284                           
  1285                           ; 2 bytes @ 0x0
  1286  0070                     	ds	2
  1287  0072                     ??_TMR2_SetInterruptHandler:
  1288  0072                     ??_TMR0_SetInterruptHandler:	
  1289                           ; 1 bytes @ 0x2
  1290                           
  1291  0072                     ??_TMR2_Initialize:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     ??_TMR0_Initialize:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297  0072                     ??_SYSTEM_Initialize:	
  1298                           ; 1 bytes @ 0x2
  1299                           
  1300  0072                     ___awdiv@dividend:	
  1301                           ; 1 bytes @ 0x2
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x2
  1305  0072                     	ds	2
  1306  0074                     ??___awdiv:
  1307                           
  1308                           ; 1 bytes @ 0x4
  1309  0074                     	ds	1
  1310  0075                     ___awdiv@counter:
  1311                           
  1312                           ; 1 bytes @ 0x5
  1313  0075                     	ds	1
  1314  0076                     ___awdiv@sign:
  1315                           
  1316                           ; 1 bytes @ 0x6
  1317  0076                     	ds	1
  1318  0077                     ___awdiv@quotient:
  1319                           
  1320                           ; 2 bytes @ 0x7
  1321  0077                     	ds	2
  1322  0079                     ??_main:
  1323                           
  1324                           ; 1 bytes @ 0x9
  1325  0079                     	ds	5
  1326                           
  1327                           	psect	cstackBANK0
  1328  0035                     __pcstackBANK0:
  1329  0035                     main@i:
  1330                           
  1331                           ; 2 bytes @ 0x0
  1332  0035                     	ds	2
  1333                           
  1334                           	psect	maintext
  1335  0041                     __pmaintext:	
  1336 ;;
  1337 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1338 ;;
  1339 ;; *************** function _main *****************
  1340 ;; Defined at:
  1341 ;;		line 27 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  i               2    0[BANK0 ] int 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : B3F/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1355 ;;      Params:         0       0       0       0
  1356 ;;      Locals:         0       2       0       0
  1357 ;;      Temps:          5       0       0       0
  1358 ;;      Totals:         5       2       0       0
  1359 ;;Total ram usage:        7 bytes
  1360 ;; Hardware stack levels required when called: 6
  1361 ;; This function calls:
  1362 ;;		_SYSTEM_Initialize
  1363 ;;		_TMR0_SetInterruptHandler
  1364 ;;		_TMR2_SetInterruptHandler
  1365 ;;		___awdiv
  1366 ;;		_processButton
  1367 ;; This function is called by:
  1368 ;;		Startup code after reset
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _main
  1374  0041                     _main:
  1375  0041                     l1356:	
  1376                           ;incstack = 0
  1377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1378                           
  1379                           
  1380                           ;main.c: 30:     SYSTEM_Initialize();
  1381  0041  3182  2254  3180   	fcall	_SYSTEM_Initialize
  1382                           
  1383                           ;main.c: 33:     TMR0_SetInterruptHandler(timerISR);
  1384  0044  3092               	movlw	low _timerISR
  1385  0045  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1386  0046  3002               	movlw	high _timerISR
  1387  0047  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1388  0048  3182  22AC  3180   	fcall	_TMR0_SetInterruptHandler
  1389                           
  1390                           ;main.c: 34:     TMR2_SetInterruptHandler(buttonISR);
  1391  004B  3064               	movlw	low _buttonISR
  1392  004C  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1393  004D  3002               	movlw	high _buttonISR
  1394  004E  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1395  004F  3182  22A6  3180   	fcall	_TMR2_SetInterruptHandler
  1396  0052                     l1358:
  1397                           
  1398                           ;main.c: 37:     (INTCONbits.GIE = 1);
  1399  0052  178B               	bsf	11,7	;volatile
  1400  0053                     l1360:
  1401                           
  1402                           ;main.c: 38:     (INTCONbits.PEIE = 1);
  1403  0053  170B               	bsf	11,6	;volatile
  1404  0054  0063               	sleep	;# 
  1405  0055                     l1362:
  1406                           
  1407                           ;main.c: 45:     {;main.c: 46:         if(buttonFlag)
  1408  0055  0140               	movlb	0	; select bank0
  1409  0056  082C               	movf	_buttonFlag,w
  1410  0057  1903               	btfsc	3,2
  1411  0058  285A               	goto	u501
  1412  0059  285B               	goto	u500
  1413  005A                     u501:
  1414  005A  2940               	goto	l1398
  1415  005B                     u500:
  1416  005B                     l1364:
  1417                           
  1418                           ;main.c: 47:         {;main.c: 48:             processButton();
  1419  005B  3181  21B1  3180   	fcall	_processButton
  1420  005E  2940               	goto	l1398
  1421  005F                     l1366:
  1422                           
  1423                           ;main.c: 54:                 if(blinkCount > 250)
  1424  005F  0825               	movf	_blinkCount+1,w
  1425  0060  3A80               	xorlw	128
  1426  0061  00F9               	movwf	??_main
  1427  0062  3080               	movlw	128
  1428  0063  0279               	subwf	??_main,w
  1429  0064  1D03               	skipz
  1430  0065  2868               	goto	u515
  1431  0066  30FB               	movlw	251
  1432  0067  0224               	subwf	_blinkCount,w
  1433  0068                     u515:
  1434  0068  1C03               	skipc
  1435  0069  286B               	goto	u511
  1436  006A  286C               	goto	u510
  1437  006B                     u511:
  1438  006B  2855               	goto	l1362
  1439  006C                     u510:
  1440  006C                     l1368:
  1441                           
  1442                           ;main.c: 55:                 {;main.c: 57:                     PORTA ^= (ledReg & 0b0001
      +                          11)|((ledReg >> 5) & 0b010000);
  1443  006C  0140               	movlb	0	; select bank0
  1444  006D  0834               	movf	_ledReg+1,w
  1445  006E  00FA               	movwf	??_main+1
  1446  006F  0833               	movf	_ledReg,w
  1447  0070  00F9               	movwf	??_main
  1448  0071  3005               	movlw	5
  1449  0072  00FB               	movwf	??_main+2
  1450  0073                     u525:
  1451  0073  0D7A               	rlf	??_main+1,w
  1452  0074  0CFA               	rrf	??_main+1,f
  1453  0075  0CF9               	rrf	??_main,f
  1454  0076  0BFB               	decfsz	??_main+2,f
  1455  0077  2873               	goto	u525
  1456  0078  3010               	movlw	16
  1457  0079  0579               	andwf	??_main,w
  1458  007A  00FC               	movwf	??_main+3
  1459  007B  0833               	movf	_ledReg,w	;volatile
  1460  007C  3907               	andlw	7
  1461  007D  047C               	iorwf	??_main+3,w
  1462  007E  00FD               	movwf	??_main+4
  1463  007F  087D               	movf	??_main+4,w
  1464  0080  068C               	xorwf	12,f	;volatile
  1465                           
  1466                           ;main.c: 58:                     PORTC ^= ((ledReg >> 3) & 0b111111);
  1467  0081  0834               	movf	_ledReg+1,w
  1468  0082  00FA               	movwf	??_main+1
  1469  0083  0833               	movf	_ledReg,w
  1470  0084  00F9               	movwf	??_main
  1471  0085  0D7A               	rlf	??_main+1,w
  1472  0086  0CFA               	rrf	??_main+1,f
  1473  0087  0CF9               	rrf	??_main,f
  1474  0088  0D7A               	rlf	??_main+1,w
  1475  0089  0CFA               	rrf	??_main+1,f
  1476  008A  0CF9               	rrf	??_main,f
  1477  008B  0D7A               	rlf	??_main+1,w
  1478  008C  0CFA               	rrf	??_main+1,f
  1479  008D  0CF9               	rrf	??_main,f
  1480  008E  0879               	movf	??_main,w
  1481  008F  393F               	andlw	63
  1482  0090  00FB               	movwf	??_main+2
  1483  0091  087B               	movf	??_main+2,w
  1484  0092  068E               	xorwf	14,f	;volatile
  1485  0093                     l1370:
  1486                           
  1487                           ;main.c: 60:                     blinkCount = 0;
  1488  0093  01A4               	clrf	_blinkCount
  1489  0094  01A5               	clrf	_blinkCount+1
  1490  0095  2855               	goto	l1362
  1491  0096                     l1372:
  1492                           
  1493                           ;main.c: 64:                 if(ledCount > ledPeriod)
  1494  0096  0832               	movf	_ledPeriod+1,w
  1495  0097  3A80               	xorlw	128
  1496  0098  00F9               	movwf	??_main
  1497  0099  0827               	movf	_ledCount+1,w
  1498  009A  3A80               	xorlw	128
  1499  009B  0279               	subwf	??_main,w
  1500  009C  1D03               	skipz
  1501  009D  28A0               	goto	u535
  1502  009E  0826               	movf	_ledCount,w
  1503  009F  0231               	subwf	_ledPeriod,w
  1504  00A0                     u535:
  1505  00A0  1803               	skipnc
  1506  00A1  28A3               	goto	u531
  1507  00A2  28A4               	goto	u530
  1508  00A3                     u531:
  1509  00A3  2855               	goto	l1362
  1510  00A4                     u530:
  1511  00A4                     l1374:
  1512                           
  1513                           ;main.c: 65:                 {;main.c: 67:                     ledReg = ledReg << 1;
  1514  00A4  0140               	movlb	0	; select bank0
  1515  00A5  3533               	lslf	_ledReg,w
  1516  00A6  00B3               	movwf	_ledReg
  1517  00A7  0D34               	rlf	_ledReg+1,w
  1518  00A8  00B4               	movwf	_ledReg+1
  1519                           
  1520                           ;main.c: 69:                     if(ledReg > 0b1000000000) ledReg = 0b0000000001;
  1521  00A9  0834               	movf	_ledReg+1,w
  1522  00AA  3A80               	xorlw	128
  1523  00AB  00F9               	movwf	??_main
  1524  00AC  3082               	movlw	130
  1525  00AD  0279               	subwf	??_main,w
  1526  00AE  1D03               	skipz
  1527  00AF  28B2               	goto	u545
  1528  00B0  3001               	movlw	1
  1529  00B1  0233               	subwf	_ledReg,w
  1530  00B2                     u545:
  1531  00B2  1C03               	skipc
  1532  00B3  28B5               	goto	u541
  1533  00B4  28B6               	goto	u540
  1534  00B5                     u541:
  1535  00B5  28BB               	goto	l1378
  1536  00B6                     u540:
  1537  00B6                     l1376:
  1538  00B6  3001               	movlw	1
  1539  00B7  0140               	movlb	0	; select bank0
  1540  00B8  00B3               	movwf	_ledReg
  1541  00B9  3000               	movlw	0
  1542  00BA  00B4               	movwf	_ledReg+1
  1543  00BB                     l1378:
  1544                           
  1545                           ;main.c: 71:                     PORTA = (ledReg & 0b000111)|((ledReg >> 5) & 0b010000);
  1546  00BB  0140               	movlb	0	; select bank0
  1547  00BC  0834               	movf	_ledReg+1,w
  1548  00BD  00FA               	movwf	??_main+1
  1549  00BE  0833               	movf	_ledReg,w
  1550  00BF  00F9               	movwf	??_main
  1551  00C0  3005               	movlw	5
  1552  00C1  00FB               	movwf	??_main+2
  1553  00C2                     u555:
  1554  00C2  0D7A               	rlf	??_main+1,w
  1555  00C3  0CFA               	rrf	??_main+1,f
  1556  00C4  0CF9               	rrf	??_main,f
  1557  00C5  0BFB               	decfsz	??_main+2,f
  1558  00C6  28C2               	goto	u555
  1559  00C7  3010               	movlw	16
  1560  00C8  0579               	andwf	??_main,w
  1561  00C9  00FC               	movwf	??_main+3
  1562  00CA  0833               	movf	_ledReg,w
  1563  00CB  3907               	andlw	7
  1564  00CC  047C               	iorwf	??_main+3,w
  1565  00CD  008C               	movwf	12	;volatile
  1566  00CE                     l1380:
  1567                           
  1568                           ;main.c: 72:                     PORTC = ((ledReg >> 3) & 0b111111);
  1569  00CE  0834               	movf	_ledReg+1,w
  1570  00CF  00FA               	movwf	??_main+1
  1571  00D0  0833               	movf	_ledReg,w
  1572  00D1  00F9               	movwf	??_main
  1573  00D2  0D7A               	rlf	??_main+1,w
  1574  00D3  0CFA               	rrf	??_main+1,f
  1575  00D4  0CF9               	rrf	??_main,f
  1576  00D5  0D7A               	rlf	??_main+1,w
  1577  00D6  0CFA               	rrf	??_main+1,f
  1578  00D7  0CF9               	rrf	??_main,f
  1579  00D8  0D7A               	rlf	??_main+1,w
  1580  00D9  0CFA               	rrf	??_main+1,f
  1581  00DA  0CF9               	rrf	??_main,f
  1582  00DB  0879               	movf	??_main,w
  1583  00DC  393F               	andlw	63
  1584  00DD  008E               	movwf	14	;volatile
  1585  00DE                     l1382:
  1586                           
  1587                           ;main.c: 74:                     ledCount = 0;
  1588  00DE  01A6               	clrf	_ledCount
  1589  00DF  01A7               	clrf	_ledCount+1
  1590  00E0  2855               	goto	l1362
  1591  00E1                     l1384:
  1592                           
  1593                           ;main.c: 79:                 speedReg = 0;
  1594  00E1  01AA               	clrf	_speedReg
  1595  00E2  01AB               	clrf	_speedReg+1
  1596                           
  1597                           ;main.c: 80:                 for(int i = 0; i < 11 - (ledPeriod / 10); i++)
  1598  00E3  01B5               	clrf	main@i
  1599  00E4  01B6               	clrf	main@i+1
  1600  00E5  28F9               	goto	l1390
  1601  00E6                     l1386:
  1602                           
  1603                           ;main.c: 81:                 {;main.c: 82:                   speedReg |= 1 << i;
  1604  00E6  3001               	movlw	1
  1605  00E7  00F9               	movwf	??_main
  1606  00E8  3000               	movlw	0
  1607  00E9  00FA               	movwf	??_main+1
  1608  00EA  0140               	movlb	0	; select bank0
  1609  00EB  0A35               	incf	main@i,w
  1610  00EC  28EF               	goto	u564
  1611  00ED                     u565:
  1612  00ED  35F9               	lslf	??_main,f
  1613  00EE  0DFA               	rlf	??_main+1,f
  1614  00EF                     u564:
  1615  00EF  0B89               	decfsz	9,f
  1616  00F0  28ED               	goto	u565
  1617  00F1  0879               	movf	??_main,w
  1618  00F2  04AA               	iorwf	_speedReg,f
  1619  00F3  087A               	movf	??_main+1,w
  1620  00F4  04AB               	iorwf	_speedReg+1,f
  1621  00F5                     l1388:
  1622                           
  1623                           ;main.c: 83:                 }
  1624  00F5  3001               	movlw	1
  1625  00F6  07B5               	addwf	main@i,f
  1626  00F7  3000               	movlw	0
  1627  00F8  3DB6               	addwfc	main@i+1,f
  1628  00F9                     l1390:
  1629  00F9  300A               	movlw	10
  1630  00FA  00F0               	movwf	___awdiv@divisor
  1631  00FB  3000               	movlw	0
  1632  00FC  00F1               	movwf	___awdiv@divisor+1
  1633  00FD  0832               	movf	_ledPeriod+1,w
  1634  00FE  00F3               	movwf	___awdiv@dividend+1
  1635  00FF  0831               	movf	_ledPeriod,w
  1636  0100  00F2               	movwf	___awdiv@dividend
  1637  0101  3181  2152  3180   	fcall	___awdiv
  1638  0104  300B               	movlw	11
  1639  0105  00F9               	movwf	??_main
  1640  0106  0870               	movf	?___awdiv,w
  1641  0107  0279               	subwf	??_main,w
  1642  0108  00FA               	movwf	??_main+1
  1643  0109  0971               	comf	?___awdiv+1,w
  1644  010A  1803               	skipnc
  1645  010B  0A89               	incf	9,f
  1646  010C  00FB               	movwf	??_main+2
  1647  010D  0140               	movlb	0	; select bank0
  1648  010E  0836               	movf	main@i+1,w
  1649  010F  3A80               	xorlw	128
  1650  0110  00FC               	movwf	??_main+3
  1651  0111  087B               	movf	??_main+2,w
  1652  0112  3A80               	xorlw	128
  1653  0113  027C               	subwf	??_main+3,w
  1654  0114  1D03               	skipz
  1655  0115  2918               	goto	u575
  1656  0116  087A               	movf	??_main+1,w
  1657  0117  0235               	subwf	main@i,w
  1658  0118                     u575:
  1659  0118  1C03               	skipc
  1660  0119  291B               	goto	u571
  1661  011A  291C               	goto	u570
  1662  011B                     u571:
  1663  011B  28E6               	goto	l1386
  1664  011C                     u570:
  1665  011C                     l1392:
  1666                           
  1667                           ;main.c: 85:                 PORTA = (speedReg & 0b000111)|((speedReg >> 5) & 0b010000);
  1668  011C  0140               	movlb	0	; select bank0
  1669  011D  082B               	movf	_speedReg+1,w
  1670  011E  00FA               	movwf	??_main+1
  1671  011F  082A               	movf	_speedReg,w
  1672  0120  00F9               	movwf	??_main
  1673  0121  3005               	movlw	5
  1674  0122  00FB               	movwf	??_main+2
  1675  0123                     u585:
  1676  0123  0D7A               	rlf	??_main+1,w
  1677  0124  0CFA               	rrf	??_main+1,f
  1678  0125  0CF9               	rrf	??_main,f
  1679  0126  0BFB               	decfsz	??_main+2,f
  1680  0127  2923               	goto	u585
  1681  0128  3010               	movlw	16
  1682  0129  0579               	andwf	??_main,w
  1683  012A  00FC               	movwf	??_main+3
  1684  012B  082A               	movf	_speedReg,w
  1685  012C  3907               	andlw	7
  1686  012D  047C               	iorwf	??_main+3,w
  1687  012E  008C               	movwf	12	;volatile
  1688  012F                     l1394:
  1689                           
  1690                           ;main.c: 86:                 PORTC = ((speedReg >> 3) & 0b111111);
  1691  012F  082B               	movf	_speedReg+1,w
  1692  0130  00FA               	movwf	??_main+1
  1693  0131  082A               	movf	_speedReg,w
  1694  0132  00F9               	movwf	??_main
  1695  0133  0D7A               	rlf	??_main+1,w
  1696  0134  0CFA               	rrf	??_main+1,f
  1697  0135  0CF9               	rrf	??_main,f
  1698  0136  0D7A               	rlf	??_main+1,w
  1699  0137  0CFA               	rrf	??_main+1,f
  1700  0138  0CF9               	rrf	??_main,f
  1701  0139  0D7A               	rlf	??_main+1,w
  1702  013A  0CFA               	rrf	??_main+1,f
  1703  013B  0CF9               	rrf	??_main,f
  1704  013C  0879               	movf	??_main,w
  1705  013D  393F               	andlw	63
  1706  013E  008E               	movwf	14	;volatile
  1707                           
  1708                           ;main.c: 87:                 break;
  1709  013F  2855               	goto	l1362
  1710  0140                     l1398:
  1711                           
  1712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 0 to 0
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ; direct_byte            8     6 (fixed)
  1719                           ; jumptable            260     6 (fixed)
  1720                           ;	Chosen strategy is simple_byte
  1721  0140  0140               	movlb	0	; select bank0
  1722  0141  0829               	movf	_gameState+1,w
  1723  0142  3A00               	xorlw	0	; case 0
  1724  0143  1903               	skipnz
  1725  0144  2946               	goto	l1464
  1726  0145  2855               	goto	l1362
  1727  0146                     l1464:
  1728                           
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 3, Range of values is 0 to 2
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte           10     6 (average)
  1734                           ; direct_byte           12     6 (fixed)
  1735                           ; jumptable            260     6 (fixed)
  1736                           ;	Chosen strategy is simple_byte
  1737  0146  0828               	movf	_gameState,w
  1738  0147  3A00               	xorlw	0	; case 0
  1739  0148  1903               	skipnz
  1740  0149  285F               	goto	l1366
  1741  014A  3A01               	xorlw	1	; case 1
  1742  014B  1903               	skipnz
  1743  014C  2896               	goto	l1372
  1744  014D  3A03               	xorlw	3	; case 2
  1745  014E  1903               	skipnz
  1746  014F  28E1               	goto	l1384
  1747  0150  2855               	goto	l1362
  1748  0151  2825               	ljmp	start
  1749  0152                     __end_of_main:
  1750                           
  1751                           	psect	text1
  1752  01B1                     __ptext1:	
  1753 ;; *************** function _processButton *****************
  1754 ;; Defined at:
  1755 ;;		line 120 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1769 ;;      Params:         0       0       0       0
  1770 ;;      Locals:         0       0       0       0
  1771 ;;      Temps:          1       0       0       0
  1772 ;;      Totals:         1       0       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 3
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _processButton
  1785  01B1                     _processButton:
  1786  01B1                     l1258:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _processButton: [wreg-fsr0h+status,2+status,0]
  1789                           
  1790                           
  1791                           ;main.c: 123:     buttonFlag = 0;
  1792  01B1  0140               	movlb	0	; select bank0
  1793  01B2  01AC               	clrf	_buttonFlag
  1794  01B3                     l1260:
  1795                           
  1796                           ;main.c: 125:     if(buttonDuration < 3000)
  1797  01B3  0821               	movf	_buttonDuration+1,w
  1798  01B4  3A80               	xorlw	128
  1799  01B5  00F0               	movwf	??_processButton
  1800  01B6  308B               	movlw	139
  1801  01B7  0270               	subwf	??_processButton,w
  1802  01B8  1D03               	skipz
  1803  01B9  29BC               	goto	u335
  1804  01BA  30B8               	movlw	184
  1805  01BB  0220               	subwf	_buttonDuration,w
  1806  01BC                     u335:
  1807  01BC  1803               	skipnc
  1808  01BD  29BF               	goto	u331
  1809  01BE  29C0               	goto	u330
  1810  01BF                     u331:
  1811  01BF  29FA               	goto	l1288
  1812  01C0                     u330:
  1813  01C0  29E4               	goto	l1276
  1814  01C1                     l1264:
  1815                           
  1816                           ;main.c: 131:                 ledCount = 0;
  1817  01C1  01A6               	clrf	_ledCount
  1818  01C2  01A7               	clrf	_ledCount+1
  1819  01C3                     l1266:
  1820                           
  1821                           ;main.c: 132:                 gameState = 1;
  1822  01C3  3001               	movlw	1
  1823  01C4  00A8               	movwf	_gameState
  1824  01C5  3000               	movlw	0
  1825  01C6  00A9               	movwf	_gameState+1
  1826                           
  1827                           ;main.c: 133:                 break;
  1828  01C7  2A0B               	goto	l1290
  1829  01C8                     l1268:
  1830                           
  1831                           ;main.c: 135:                 blinkCount = 0;
  1832  01C8  01A4               	clrf	_blinkCount
  1833  01C9  01A5               	clrf	_blinkCount+1
  1834                           
  1835                           ;main.c: 136:                 gameState = 0;
  1836  01CA  01A8               	clrf	_gameState
  1837  01CB  01A9               	clrf	_gameState+1
  1838                           
  1839                           ;main.c: 137:                 break;
  1840  01CC  2A0B               	goto	l1290
  1841  01CD                     l1270:
  1842                           
  1843                           ;main.c: 140:                 ledPeriod -= 10;
  1844  01CD  30F6               	movlw	246
  1845  01CE  07B1               	addwf	_ledPeriod,f
  1846  01CF  30FF               	movlw	255
  1847  01D0  3DB2               	addwfc	_ledPeriod+1,f
  1848                           
  1849                           ;main.c: 142:                 if(ledPeriod < 10) ledPeriod = 100;
  1850  01D1  0832               	movf	_ledPeriod+1,w
  1851  01D2  3A80               	xorlw	128
  1852  01D3  00F0               	movwf	??_processButton
  1853  01D4  3080               	movlw	128
  1854  01D5  0270               	subwf	??_processButton,w
  1855  01D6  1D03               	skipz
  1856  01D7  29DA               	goto	u345
  1857  01D8  300A               	movlw	10
  1858  01D9  0231               	subwf	_ledPeriod,w
  1859  01DA                     u345:
  1860  01DA  1803               	skipnc
  1861  01DB  29DD               	goto	u341
  1862  01DC  29DE               	goto	u340
  1863  01DD                     u341:
  1864  01DD  2A0B               	goto	l1290
  1865  01DE                     u340:
  1866  01DE                     l1272:
  1867  01DE  3064               	movlw	100
  1868  01DF  0140               	movlb	0	; select bank0
  1869  01E0  00B1               	movwf	_ledPeriod
  1870  01E1  3000               	movlw	0
  1871  01E2  00B2               	movwf	_ledPeriod+1
  1872  01E3  2A0B               	goto	l1290
  1873  01E4                     l1276:
  1874                           
  1875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1876                           ; Switch size 1, requested type "simple"
  1877                           ; Number of cases is 1, Range of values is 0 to 0
  1878                           ; switch strategies available:
  1879                           ; Name         Instructions Cycles
  1880                           ; simple_byte            4     3 (average)
  1881                           ; direct_byte            8     6 (fixed)
  1882                           ; jumptable            260     6 (fixed)
  1883                           ;	Chosen strategy is simple_byte
  1884  01E4  0140               	movlb	0	; select bank0
  1885  01E5  0829               	movf	_gameState+1,w
  1886  01E6  3A00               	xorlw	0	; case 0
  1887  01E7  1903               	skipnz
  1888  01E8  29EA               	goto	l1466
  1889  01E9  2A0B               	goto	l1290
  1890  01EA                     l1466:
  1891                           
  1892                           ; Switch size 1, requested type "simple"
  1893                           ; Number of cases is 3, Range of values is 0 to 2
  1894                           ; switch strategies available:
  1895                           ; Name         Instructions Cycles
  1896                           ; simple_byte           10     6 (average)
  1897                           ; direct_byte           12     6 (fixed)
  1898                           ; jumptable            260     6 (fixed)
  1899                           ;	Chosen strategy is simple_byte
  1900  01EA  0828               	movf	_gameState,w
  1901  01EB  3A00               	xorlw	0	; case 0
  1902  01EC  1903               	skipnz
  1903  01ED  29C1               	goto	l1264
  1904  01EE  3A01               	xorlw	1	; case 1
  1905  01EF  1903               	skipnz
  1906  01F0  29C8               	goto	l1268
  1907  01F1  3A03               	xorlw	3	; case 2
  1908  01F2  1903               	skipnz
  1909  01F3  29CD               	goto	l1270
  1910  01F4  2A0B               	goto	l1290
  1911  01F5                     l1278:
  1912                           
  1913                           ;main.c: 154:                 gameState = 2;
  1914  01F5  3002               	movlw	2
  1915  01F6  00A8               	movwf	_gameState
  1916  01F7  3000               	movlw	0
  1917  01F8  00A9               	movwf	_gameState+1
  1918                           
  1919                           ;main.c: 155:                 break;
  1920  01F9  2A0B               	goto	l1290
  1921  01FA                     l1288:
  1922                           
  1923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1924                           ; Switch size 1, requested type "simple"
  1925                           ; Number of cases is 1, Range of values is 0 to 0
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte            4     3 (average)
  1929                           ; direct_byte            8     6 (fixed)
  1930                           ; jumptable            260     6 (fixed)
  1931                           ;	Chosen strategy is simple_byte
  1932  01FA  0140               	movlb	0	; select bank0
  1933  01FB  0829               	movf	_gameState+1,w
  1934  01FC  3A00               	xorlw	0	; case 0
  1935  01FD  1903               	skipnz
  1936  01FE  2A00               	goto	l1468
  1937  01FF  2A0B               	goto	l1290
  1938  0200                     l1468:
  1939                           
  1940                           ; Switch size 1, requested type "simple"
  1941                           ; Number of cases is 3, Range of values is 0 to 2
  1942                           ; switch strategies available:
  1943                           ; Name         Instructions Cycles
  1944                           ; simple_byte           10     6 (average)
  1945                           ; direct_byte           12     6 (fixed)
  1946                           ; jumptable            260     6 (fixed)
  1947                           ;	Chosen strategy is simple_byte
  1948  0200  0828               	movf	_gameState,w
  1949  0201  3A00               	xorlw	0	; case 0
  1950  0202  1903               	skipnz
  1951  0203  29F5               	goto	l1278
  1952  0204  3A01               	xorlw	1	; case 1
  1953  0205  1903               	skipnz
  1954  0206  29F5               	goto	l1278
  1955  0207  3A03               	xorlw	3	; case 2
  1956  0208  1903               	skipnz
  1957  0209  29C1               	goto	l1264
  1958  020A  2A0B               	goto	l1290
  1959  020B                     l1290:
  1960                           
  1961                           ;main.c: 168:     buttonDuration = 0;
  1962  020B  0140               	movlb	0	; select bank0
  1963  020C  01A0               	clrf	_buttonDuration
  1964  020D  01A1               	clrf	_buttonDuration+1
  1965  020E                     l302:
  1966  020E  0008               	return
  1967  020F                     __end_of_processButton:
  1968                           
  1969                           	psect	text2
  1970  0152                     __ptext2:	
  1971 ;; *************** function ___awdiv *****************
  1972 ;; Defined at:
  1973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  divisor         2    0[COMMON] int 
  1976 ;;  dividend        2    2[COMMON] int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  quotient        2    7[COMMON] int 
  1979 ;;  sign            1    6[COMMON] unsigned char 
  1980 ;;  counter         1    5[COMMON] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  2    0[COMMON] int 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1990 ;;      Params:         4       0       0       0
  1991 ;;      Locals:         4       0       0       0
  1992 ;;      Temps:          1       0       0       0
  1993 ;;      Totals:         9       0       0       0
  1994 ;;Total ram usage:        9 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 3
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function ___awdiv
  2006  0152                     ___awdiv:
  2007  0152                     l1300:	
  2008                           ;incstack = 0
  2009                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2010                           
  2011  0152  01F6               	clrf	___awdiv@sign
  2012  0153                     l1302:
  2013  0153  1FF1               	btfss	___awdiv@divisor+1,7
  2014  0154  2956               	goto	u351
  2015  0155  2957               	goto	u350
  2016  0156                     u351:
  2017  0156  295E               	goto	l1308
  2018  0157                     u350:
  2019  0157                     l1304:
  2020  0157  09F0               	comf	___awdiv@divisor,f
  2021  0158  09F1               	comf	___awdiv@divisor+1,f
  2022  0159  0AF0               	incf	___awdiv@divisor,f
  2023  015A  1903               	skipnz
  2024  015B  0AF1               	incf	___awdiv@divisor+1,f
  2025  015C                     l1306:
  2026  015C  01F6               	clrf	___awdiv@sign
  2027  015D  0AF6               	incf	___awdiv@sign,f
  2028  015E                     l1308:
  2029  015E  1FF3               	btfss	___awdiv@dividend+1,7
  2030  015F  2961               	goto	u361
  2031  0160  2962               	goto	u360
  2032  0161                     u361:
  2033  0161  296B               	goto	l1314
  2034  0162                     u360:
  2035  0162                     l1310:
  2036  0162  09F2               	comf	___awdiv@dividend,f
  2037  0163  09F3               	comf	___awdiv@dividend+1,f
  2038  0164  0AF2               	incf	___awdiv@dividend,f
  2039  0165  1903               	skipnz
  2040  0166  0AF3               	incf	___awdiv@dividend+1,f
  2041  0167                     l1312:
  2042  0167  3001               	movlw	1
  2043  0168  00F4               	movwf	??___awdiv
  2044  0169  0874               	movf	??___awdiv,w
  2045  016A  06F6               	xorwf	___awdiv@sign,f
  2046  016B                     l1314:
  2047  016B  01F7               	clrf	___awdiv@quotient
  2048  016C  01F8               	clrf	___awdiv@quotient+1
  2049  016D                     l1316:
  2050  016D  0870               	movf	___awdiv@divisor,w
  2051  016E  0471               	iorwf	___awdiv@divisor+1,w
  2052  016F  1903               	btfsc	3,2
  2053  0170  2972               	goto	u371
  2054  0171  2973               	goto	u370
  2055  0172                     u371:
  2056  0172  29A2               	goto	l1336
  2057  0173                     u370:
  2058  0173                     l1318:
  2059  0173  01F5               	clrf	___awdiv@counter
  2060  0174  0AF5               	incf	___awdiv@counter,f
  2061  0175  297F               	goto	l1324
  2062  0176                     l1320:
  2063  0176  3001               	movlw	1
  2064  0177                     u385:
  2065  0177  35F0               	lslf	___awdiv@divisor,f
  2066  0178  0DF1               	rlf	___awdiv@divisor+1,f
  2067  0179  0B89               	decfsz	9,f
  2068  017A  2977               	goto	u385
  2069  017B                     l1322:
  2070  017B  3001               	movlw	1
  2071  017C  00F4               	movwf	??___awdiv
  2072  017D  0874               	movf	??___awdiv,w
  2073  017E  07F5               	addwf	___awdiv@counter,f
  2074  017F                     l1324:
  2075  017F  1FF1               	btfss	___awdiv@divisor+1,7
  2076  0180  2982               	goto	u391
  2077  0181  2983               	goto	u390
  2078  0182                     u391:
  2079  0182  2976               	goto	l1320
  2080  0183                     u390:
  2081  0183                     l1326:
  2082  0183  3001               	movlw	1
  2083  0184                     u405:
  2084  0184  35F7               	lslf	___awdiv@quotient,f
  2085  0185  0DF8               	rlf	___awdiv@quotient+1,f
  2086  0186  0B89               	decfsz	9,f
  2087  0187  2984               	goto	u405
  2088  0188  0871               	movf	___awdiv@divisor+1,w
  2089  0189  0273               	subwf	___awdiv@dividend+1,w
  2090  018A  1D03               	skipz
  2091  018B  298E               	goto	u415
  2092  018C  0870               	movf	___awdiv@divisor,w
  2093  018D  0272               	subwf	___awdiv@dividend,w
  2094  018E                     u415:
  2095  018E  1C03               	skipc
  2096  018F  2991               	goto	u411
  2097  0190  2992               	goto	u410
  2098  0191                     u411:
  2099  0191  2997               	goto	l1332
  2100  0192                     u410:
  2101  0192                     l1328:
  2102  0192  0870               	movf	___awdiv@divisor,w
  2103  0193  02F2               	subwf	___awdiv@dividend,f
  2104  0194  0871               	movf	___awdiv@divisor+1,w
  2105  0195  3BF3               	subwfb	___awdiv@dividend+1,f
  2106  0196                     l1330:
  2107  0196  1477               	bsf	___awdiv@quotient,0
  2108  0197                     l1332:
  2109  0197  3001               	movlw	1
  2110  0198                     u425:
  2111  0198  36F1               	lsrf	___awdiv@divisor+1,f
  2112  0199  0CF0               	rrf	___awdiv@divisor,f
  2113  019A  0B89               	decfsz	9,f
  2114  019B  2998               	goto	u425
  2115  019C                     l1334:
  2116  019C  3001               	movlw	1
  2117  019D  02F5               	subwf	___awdiv@counter,f
  2118  019E  1D03               	btfss	3,2
  2119  019F  29A1               	goto	u431
  2120  01A0  29A2               	goto	u430
  2121  01A1                     u431:
  2122  01A1  2983               	goto	l1326
  2123  01A2                     u430:
  2124  01A2                     l1336:
  2125  01A2  0876               	movf	___awdiv@sign,w
  2126  01A3  1903               	btfsc	3,2
  2127  01A4  29A6               	goto	u441
  2128  01A5  29A7               	goto	u440
  2129  01A6                     u441:
  2130  01A6  29AC               	goto	l1340
  2131  01A7                     u440:
  2132  01A7                     l1338:
  2133  01A7  09F7               	comf	___awdiv@quotient,f
  2134  01A8  09F8               	comf	___awdiv@quotient+1,f
  2135  01A9  0AF7               	incf	___awdiv@quotient,f
  2136  01AA  1903               	skipnz
  2137  01AB  0AF8               	incf	___awdiv@quotient+1,f
  2138  01AC                     l1340:
  2139  01AC  0878               	movf	___awdiv@quotient+1,w
  2140  01AD  00F1               	movwf	?___awdiv+1
  2141  01AE  0877               	movf	___awdiv@quotient,w
  2142  01AF  00F0               	movwf	?___awdiv
  2143  01B0                     l523:
  2144  01B0  0008               	return
  2145  01B1                     __end_of___awdiv:
  2146                           
  2147                           	psect	text3
  2148  0254                     __ptext3:	
  2149 ;; *************** function _SYSTEM_Initialize *****************
  2150 ;; Defined at:
  2151 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2165 ;;      Params:         0       0       0       0
  2166 ;;      Locals:         0       0       0       0
  2167 ;;      Temps:          0       0       0       0
  2168 ;;      Totals:         0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 5
  2172 ;; This function calls:
  2173 ;;		_OSCILLATOR_Initialize
  2174 ;;		_PIN_MANAGER_Initialize
  2175 ;;		_TMR0_Initialize
  2176 ;;		_TMR2_Initialize
  2177 ;;		_WDT_Initialize
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _SYSTEM_Initialize
  2185  0254                     _SYSTEM_Initialize:
  2186  0254                     l1248:	
  2187                           ;incstack = 0
  2188                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2189                           
  2190                           
  2191                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2192  0254  3182  220F  3182   	fcall	_PIN_MANAGER_Initialize
  2193  0257                     l1250:
  2194                           
  2195                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2196  0257  3182  22B2  3182   	fcall	_OSCILLATOR_Initialize
  2197  025A                     l1252:
  2198                           
  2199                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2200  025A  3182  22BB  3182   	fcall	_WDT_Initialize
  2201  025D                     l1254:
  2202                           
  2203                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  2204  025D  3182  2229  3182   	fcall	_TMR2_Initialize
  2205  0260                     l1256:
  2206                           
  2207                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  2208  0260  3182  2240  3182   	fcall	_TMR0_Initialize
  2209  0263                     l211:
  2210  0263  0008               	return
  2211  0264                     __end_of_SYSTEM_Initialize:
  2212                           
  2213                           	psect	text4
  2214  02BB                     __ptext4:	
  2215 ;; *************** function _WDT_Initialize *****************
  2216 ;; Defined at:
  2217 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2231 ;;      Params:         0       0       0       0
  2232 ;;      Locals:         0       0       0       0
  2233 ;;      Temps:          0       0       0       0
  2234 ;;      Totals:         0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 3
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_SYSTEM_Initialize
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _WDT_Initialize
  2247  02BB                     _WDT_Initialize:
  2248  02BB                     l1224:	
  2249                           ;incstack = 0
  2250                           ; Regs used in _WDT_Initialize: [wreg]
  2251                           
  2252                           
  2253                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x20;
  2254  02BB  3020               	movlw	32
  2255  02BC  0150               	movlb	16	; select bank16
  2256  02BD  008C               	movwf	12	;volatile
  2257  02BE                     l217:
  2258  02BE  0008               	return
  2259  02BF                     __end_of_WDT_Initialize:
  2260                           
  2261                           	psect	text5
  2262  0229                     __ptext5:	
  2263 ;; *************** function _TMR2_Initialize *****************
  2264 ;; Defined at:
  2265 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2279 ;;      Params:         0       0       0       0
  2280 ;;      Locals:         0       0       0       0
  2281 ;;      Temps:          0       0       0       0
  2282 ;;      Totals:         0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 4
  2286 ;; This function calls:
  2287 ;;		_TMR2_SetInterruptHandler
  2288 ;; This function is called by:
  2289 ;;		_SYSTEM_Initialize
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _TMR2_Initialize
  2295  0229                     _TMR2_Initialize:
  2296  0229                     l1196:	
  2297                           ;incstack = 0
  2298                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2299                           
  2300                           
  2301                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x04;
  2302  0229  3004               	movlw	4
  2303  022A  0145               	movlb	5	; select bank5
  2304  022B  0090               	movwf	16	;volatile
  2305                           
  2306                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x13;
  2307  022C  3013               	movlw	19
  2308  022D  008F               	movwf	15	;volatile
  2309  022E                     l1198:
  2310                           
  2311                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  2312  022E  0191               	clrf	17	;volatile
  2313  022F                     l1200:
  2314                           
  2315                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x12;
  2316  022F  3012               	movlw	18
  2317  0230  008D               	movwf	13	;volatile
  2318                           
  2319                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  2320  0231  018C               	clrf	12	;volatile
  2321  0232                     l1202:
  2322                           
  2323                           ;mcc_generated_files/tmr2.c: 84:     PIR1bits.TMR2IF = 0;
  2324  0232  014E               	movlb	14	; select bank14
  2325  0233  130D               	bcf	13,6	;volatile
  2326  0234                     l1204:
  2327                           
  2328                           ;mcc_generated_files/tmr2.c: 87:     PIE1bits.TMR2IE = 1;
  2329  0234  1717               	bsf	23,6	;volatile
  2330  0235                     l1206:
  2331                           
  2332                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2333  0235  30BF               	movlw	low _TMR2_DefaultInterruptHandler
  2334  0236  00F0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2335  0237  3002               	movlw	high _TMR2_DefaultInterruptHandler
  2336  0238  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2337  0239  3182  22A6  3182   	fcall	_TMR2_SetInterruptHandler
  2338  023C                     l1208:
  2339                           
  2340                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xC0;
  2341  023C  30C0               	movlw	192
  2342  023D  0145               	movlb	5	; select bank5
  2343  023E  008E               	movwf	14	;volatile
  2344  023F                     l96:
  2345  023F  0008               	return
  2346  0240                     __end_of_TMR2_Initialize:
  2347                           
  2348                           	psect	text6
  2349  02A6                     __ptext6:	
  2350 ;; *************** function _TMR2_SetInterruptHandler *****************
  2351 ;; Defined at:
  2352 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2355 ;;		 -> buttonISR(1), TMR2_DefaultInterruptHandler(1), 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2367 ;;      Params:         2       0       0       0
  2368 ;;      Locals:         0       0       0       0
  2369 ;;      Temps:          0       0       0       0
  2370 ;;      Totals:         2       0       0       0
  2371 ;;Total ram usage:        2 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 3
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_TMR2_Initialize
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _TMR2_SetInterruptHandler
  2384  02A6                     _TMR2_SetInterruptHandler:
  2385  02A6                     l1166:	
  2386                           ;incstack = 0
  2387                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  2388                           
  2389                           
  2390                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  2391  02A6  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  2392  02A7  0140               	movlb	0	; select bank0
  2393  02A8  00B0               	movwf	_TMR2_InterruptHandler+1
  2394  02A9  0870               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  2395  02AA  00AF               	movwf	_TMR2_InterruptHandler
  2396  02AB                     l139:
  2397  02AB  0008               	return
  2398  02AC                     __end_of_TMR2_SetInterruptHandler:
  2399                           
  2400                           	psect	text7
  2401  0240                     __ptext7:	
  2402 ;; *************** function _TMR0_Initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2418 ;;      Params:         0       0       0       0
  2419 ;;      Locals:         0       0       0       0
  2420 ;;      Temps:          0       0       0       0
  2421 ;;      Totals:         0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 4
  2425 ;; This function calls:
  2426 ;;		_TMR0_SetInterruptHandler
  2427 ;; This function is called by:
  2428 ;;		_SYSTEM_Initialize
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _TMR0_Initialize
  2434  0240                     _TMR0_Initialize:
  2435  0240                     l1210:	
  2436                           ;incstack = 0
  2437                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2438                           
  2439                           
  2440                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x44;
  2441  0240  3044               	movlw	68
  2442  0241  014B               	movlb	11	; select bank11
  2443  0242  009F               	movwf	31	;volatile
  2444                           
  2445                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x0F;
  2446  0243  300F               	movlw	15
  2447  0244  009D               	movwf	29	;volatile
  2448  0245                     l1212:
  2449                           
  2450                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  2451  0245  019C               	clrf	28	;volatile
  2452  0246                     l1214:
  2453                           
  2454                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  2455  0246  014E               	movlb	14	; select bank14
  2456  0247  128C               	bcf	12,5	;volatile
  2457  0248                     l1216:
  2458                           
  2459                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  2460  0248  1696               	bsf	22,5	;volatile
  2461  0249                     l1218:
  2462                           
  2463                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2464  0249  30C0               	movlw	low _TMR0_DefaultInterruptHandler
  2465  024A  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2466  024B  3002               	movlw	high _TMR0_DefaultInterruptHandler
  2467  024C  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2468  024D  3182  22AC  3182   	fcall	_TMR0_SetInterruptHandler
  2469  0250                     l1220:
  2470                           
  2471                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  2472  0250  3080               	movlw	128
  2473  0251  014B               	movlb	11	; select bank11
  2474  0252  009E               	movwf	30	;volatile
  2475  0253                     l165:
  2476  0253  0008               	return
  2477  0254                     __end_of_TMR0_Initialize:
  2478                           
  2479                           	psect	text8
  2480  02AC                     __ptext8:	
  2481 ;; *************** function _TMR0_SetInterruptHandler *****************
  2482 ;; Defined at:
  2483 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2486 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2498 ;;      Params:         2       0       0       0
  2499 ;;      Locals:         0       0       0       0
  2500 ;;      Temps:          0       0       0       0
  2501 ;;      Totals:         2       0       0       0
  2502 ;;Total ram usage:        2 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 3
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_TMR0_Initialize
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _TMR0_SetInterruptHandler
  2515  02AC                     _TMR0_SetInterruptHandler:
  2516  02AC                     l1168:	
  2517                           ;incstack = 0
  2518                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2519                           
  2520                           
  2521                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  2522  02AC  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2523  02AD  0140               	movlb	0	; select bank0
  2524  02AE  00AE               	movwf	_TMR0_InterruptHandler+1
  2525  02AF  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2526  02B0  00AD               	movwf	_TMR0_InterruptHandler
  2527  02B1                     l187:
  2528  02B1  0008               	return
  2529  02B2                     __end_of_TMR0_SetInterruptHandler:
  2530                           
  2531                           	psect	text9
  2532  020F                     __ptext9:	
  2533 ;; *************** function _PIN_MANAGER_Initialize *****************
  2534 ;; Defined at:
  2535 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2549 ;;      Params:         0       0       0       0
  2550 ;;      Locals:         0       0       0       0
  2551 ;;      Temps:          0       0       0       0
  2552 ;;      Totals:         0       0       0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 3
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_SYSTEM_Initialize
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _PIN_MANAGER_Initialize
  2565  020F                     _PIN_MANAGER_Initialize:
  2566  020F                     l1170:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2569                           
  2570                           
  2571                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2572  020F  0140               	movlb	0	; select bank0
  2573  0210  0198               	clrf	24	;volatile
  2574                           
  2575                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  2576  0211  019A               	clrf	26	;volatile
  2577  0212                     l1172:
  2578                           
  2579                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x28;
  2580  0212  3028               	movlw	40
  2581  0213  0092               	movwf	18	;volatile
  2582  0214                     l1174:
  2583                           
  2584                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x00;
  2585  0214  0194               	clrf	20	;volatile
  2586  0215                     l1176:
  2587                           
  2588                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  2589  0215  017E               	movlb	62	; select bank62
  2590  0216  01CE               	clrf	78	;volatile
  2591  0217                     l1178:
  2592                           
  2593                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x00;
  2594  0217  01B8               	clrf	56	;volatile
  2595                           
  2596                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x20;
  2597  0218  3020               	movlw	32
  2598  0219  00B9               	movwf	57	;volatile
  2599  021A                     l1180:
  2600                           
  2601                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  2602  021A  01CF               	clrf	79	;volatile
  2603  021B                     l1182:
  2604                           
  2605                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  2606  021B  01BA               	clrf	58	;volatile
  2607  021C                     l1184:
  2608                           
  2609                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  2610  021C  01D0               	clrf	80	;volatile
  2611  021D                     l1186:
  2612                           
  2613                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  2614  021D  3037               	movlw	55
  2615  021E  00BB               	movwf	59	;volatile
  2616  021F                     l1188:
  2617                           
  2618                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  2619  021F  303F               	movlw	63
  2620  0220  00D1               	movwf	81	;volatile
  2621  0221                     l1190:
  2622                           
  2623                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  2624  0221  303F               	movlw	63
  2625  0222  00BC               	movwf	60	;volatile
  2626  0223                     l1192:
  2627                           
  2628                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  2629  0223  303F               	movlw	63
  2630  0224  00D2               	movwf	82	;volatile
  2631  0225                     l1194:
  2632                           
  2633                           ;mcc_generated_files/pin_manager.c: 106:     T2INPPS = 0x05;
  2634  0225  3005               	movlw	5
  2635  0226  017D               	movlb	61	; select bank61
  2636  0227  009C               	movwf	28	;volatile
  2637  0228                     l58:
  2638  0228  0008               	return
  2639  0229                     __end_of_PIN_MANAGER_Initialize:
  2640                           
  2641                           	psect	text10
  2642  02B2                     __ptext10:	
  2643 ;; *************** function _OSCILLATOR_Initialize *****************
  2644 ;; Defined at:
  2645 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		status,2
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2659 ;;      Params:         0       0       0       0
  2660 ;;      Locals:         0       0       0       0
  2661 ;;      Temps:          0       0       0       0
  2662 ;;      Totals:         0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 3
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_SYSTEM_Initialize
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _OSCILLATOR_Initialize
  2675  02B2                     _OSCILLATOR_Initialize:
  2676  02B2                     l1222:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2679                           
  2680                           
  2681                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  2682  02B2  0151               	movlb	17	; select bank17
  2683  02B3  0191               	clrf	17	;volatile
  2684                           
  2685                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x00;
  2686  02B4  0193               	clrf	19	;volatile
  2687                           
  2688                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  2689  02B5  0192               	clrf	18	;volatile
  2690  02B6                     l214:
  2691  02B6  0008               	return
  2692  02B7                     __end_of_OSCILLATOR_Initialize:
  2693                           
  2694                           	psect	intentry
  2695  0004                     __pintentry:	
  2696 ;; *************** function _INTERRUPT_InterruptManager *****************
  2697 ;; Defined at:
  2698 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, pclath, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2712 ;;      Params:         0       0       0       0
  2713 ;;      Locals:         0       0       0       0
  2714 ;;      Temps:          0       0       0       0
  2715 ;;      Totals:         0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 2
  2719 ;; This function calls:
  2720 ;;		_TMR0_ISR
  2721 ;;		_TMR2_ISR
  2722 ;; This function is called by:
  2723 ;;		Interrupt level 1
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727  0004                     _INTERRUPT_InterruptManager:
  2728                           
  2729                           ;incstack = 0
  2730  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2731                           
  2732                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2733  0005  3180               	pagesel	$
  2734  0006                     i1l1344:
  2735                           
  2736                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  2737  0006  014E               	movlb	14	; select bank14
  2738  0007  1E96               	btfss	22,5	;volatile
  2739  0008  280A               	goto	u45_21
  2740  0009  280B               	goto	u45_20
  2741  000A                     u45_21:
  2742  000A  2813               	goto	i1l19
  2743  000B                     u45_20:
  2744  000B                     i1l1346:
  2745  000B  1E8C               	btfss	12,5	;volatile
  2746  000C  280E               	goto	u46_21
  2747  000D  280F               	goto	u46_20
  2748  000E                     u46_21:
  2749  000E  2813               	goto	i1l19
  2750  000F                     u46_20:
  2751  000F                     i1l1348:
  2752                           
  2753                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2754  000F  3182  2283  3180   	fcall	_TMR0_ISR
  2755                           
  2756                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2757  0012  2823               	goto	i1l25
  2758  0013                     i1l19:	
  2759                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  2760                           
  2761  0013  1F0B               	btfss	11,6	;volatile
  2762  0014  2816               	goto	u47_21
  2763  0015  2817               	goto	u47_20
  2764  0016                     u47_21:
  2765  0016  2823               	goto	i1l25
  2766  0017                     u47_20:
  2767  0017                     i1l1350:
  2768                           
  2769                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  2770  0017  1F17               	btfss	23,6	;volatile
  2771  0018  281A               	goto	u48_21
  2772  0019  281B               	goto	u48_20
  2773  001A                     u48_21:
  2774  001A  2823               	goto	i1l24
  2775  001B                     u48_20:
  2776  001B                     i1l1352:
  2777  001B  1F0D               	btfss	13,6	;volatile
  2778  001C  281E               	goto	u49_21
  2779  001D  281F               	goto	u49_20
  2780  001E                     u49_21:
  2781  001E  2823               	goto	i1l24
  2782  001F                     u49_20:
  2783  001F                     i1l1354:
  2784                           
  2785                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  2786  001F  3182  2274  3180   	fcall	_TMR2_ISR
  2787                           
  2788                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2789  0022  2823               	goto	i1l25
  2790  0023                     i1l24:	
  2791                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  2792                           
  2793  0023                     i1l25:
  2794  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2795  0024  0009               	retfie
  2796  0025                     __end_of_INTERRUPT_InterruptManager:
  2797                           
  2798                           	psect	text12
  2799  0274                     __ptext12:	
  2800 ;; *************** function _TMR2_ISR *****************
  2801 ;; Defined at:
  2802 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2816 ;;      Params:         0       0       0       0
  2817 ;;      Locals:         0       0       0       0
  2818 ;;      Temps:          0       0       0       0
  2819 ;;      Totals:         0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 1
  2823 ;; This function calls:
  2824 ;;		Absolute function
  2825 ;;		_TMR2_DefaultInterruptHandler
  2826 ;;		_buttonISR
  2827 ;; This function is called by:
  2828 ;;		_INTERRUPT_InterruptManager
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _TMR2_ISR
  2834  0274                     _TMR2_ISR:
  2835  0274                     i1l1242:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2838                           
  2839                           
  2840                           ;mcc_generated_files/tmr2.c: 169:     PIR1bits.TMR2IF = 0;
  2841  0274  014E               	movlb	14	; select bank14
  2842  0275  130D               	bcf	13,6	;volatile
  2843  0276                     i1l1244:
  2844                           
  2845                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  2846  0276  0140               	movlb	0	; select bank0
  2847  0277  082F               	movf	_TMR2_InterruptHandler,w
  2848  0278  0430               	iorwf	_TMR2_InterruptHandler+1,w
  2849  0279  1903               	btfsc	3,2
  2850  027A  2A7C               	goto	u32_21
  2851  027B  2A7D               	goto	u32_20
  2852  027C                     u32_21:
  2853  027C  2A82               	goto	i1l136
  2854  027D                     u32_20:
  2855  027D                     i1l1246:
  2856                           
  2857                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  2858  027D  0830               	movf	_TMR2_InterruptHandler+1,w
  2859  027E  008A               	movwf	10
  2860  027F  082F               	movf	_TMR2_InterruptHandler,w
  2861  0280  000A               	callw
  2862  0281  3182               	pagesel	$
  2863  0282                     i1l136:
  2864  0282  0008               	return
  2865  0283                     __end_of_TMR2_ISR:
  2866                           
  2867                           	psect	text13
  2868  02BF                     __ptext13:	
  2869 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2870 ;; Defined at:
  2871 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		None
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2885 ;;      Params:         0       0       0       0
  2886 ;;      Locals:         0       0       0       0
  2887 ;;      Temps:          0       0       0       0
  2888 ;;      Totals:         0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_TMR2_Initialize
  2895 ;;		_TMR2_ISR
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _TMR2_DefaultInterruptHandler
  2901  02BF                     _TMR2_DefaultInterruptHandler:
  2902  02BF                     i1l142:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  2905                           
  2906  02BF  0008               	return
  2907  02C0                     __end_of_TMR2_DefaultInterruptHandler:
  2908                           
  2909                           	psect	text14
  2910  0264                     __ptext14:	
  2911 ;; *************** function _buttonISR *****************
  2912 ;; Defined at:
  2913 ;;		line 103 in file "main.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2927 ;;      Params:         0       0       0       0
  2928 ;;      Locals:         0       0       0       0
  2929 ;;      Temps:          0       0       0       0
  2930 ;;      Totals:         0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;;		_TMR2_ISR
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           
  2942                           ;psect for function _buttonISR
  2943  0264                     _buttonISR:
  2944  0264                     i1l1228:	
  2945                           ;incstack = 0
  2946                           ; Regs used in _buttonISR: [wreg+status,2]
  2947                           
  2948  0264  0064               	clrwdt	;# 
  2949                           
  2950                           ;main.c: 108:     if(!RA5)
  2951  0265  0140               	movlb	0	; select bank0
  2952  0266  1A8C               	btfsc	12,5	;volatile
  2953  0267  2A69               	goto	u30_21
  2954  0268  2A6A               	goto	u30_20
  2955  0269                     u30_21:
  2956  0269  2A6D               	goto	i1l1232
  2957  026A                     u30_20:
  2958  026A                     i1l1230:
  2959                           
  2960                           ;main.c: 109:     {;main.c: 110:         buttonCount = 0;
  2961  026A  01A2               	clrf	_buttonCount
  2962  026B  01A3               	clrf	_buttonCount+1
  2963                           
  2964                           ;main.c: 111:     }
  2965  026C  2A73               	goto	i1l284
  2966  026D                     i1l1232:
  2967                           
  2968                           ;main.c: 113:     {;main.c: 114:         buttonDuration = buttonCount;
  2969  026D  0823               	movf	_buttonCount+1,w
  2970  026E  00A1               	movwf	_buttonDuration+1
  2971  026F  0822               	movf	_buttonCount,w
  2972  0270  00A0               	movwf	_buttonDuration
  2973  0271                     i1l1234:
  2974                           
  2975                           ;main.c: 115:         buttonFlag = 1;
  2976  0271  01AC               	clrf	_buttonFlag
  2977  0272  0AAC               	incf	_buttonFlag,f
  2978  0273                     i1l284:
  2979  0273  0008               	return
  2980  0274                     __end_of_buttonISR:
  2981                           
  2982                           	psect	text15
  2983  0283                     __ptext15:	
  2984 ;; *************** function _TMR0_ISR *****************
  2985 ;; Defined at:
  2986 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3000 ;;      Params:         0       0       0       0
  3001 ;;      Locals:         0       0       0       0
  3002 ;;      Temps:          0       0       0       0
  3003 ;;      Totals:         0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		Absolute function
  3009 ;;		_TMR0_DefaultInterruptHandler
  3010 ;;		_timerISR
  3011 ;; This function is called by:
  3012 ;;		_INTERRUPT_InterruptManager
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _TMR0_ISR
  3018  0283                     _TMR0_ISR:
  3019  0283                     i1l1236:	
  3020                           ;incstack = 0
  3021                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3022                           
  3023                           
  3024                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  3025  0283  014E               	movlb	14	; select bank14
  3026  0284  128C               	bcf	12,5	;volatile
  3027  0285                     i1l1238:
  3028                           
  3029                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  3030  0285  0140               	movlb	0	; select bank0
  3031  0286  082D               	movf	_TMR0_InterruptHandler,w
  3032  0287  042E               	iorwf	_TMR0_InterruptHandler+1,w
  3033  0288  1903               	btfsc	3,2
  3034  0289  2A8B               	goto	u31_21
  3035  028A  2A8C               	goto	u31_20
  3036  028B                     u31_21:
  3037  028B  2A91               	goto	i1l184
  3038  028C                     u31_20:
  3039  028C                     i1l1240:
  3040                           
  3041                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  3042  028C  082E               	movf	_TMR0_InterruptHandler+1,w
  3043  028D  008A               	movwf	10
  3044  028E  082D               	movf	_TMR0_InterruptHandler,w
  3045  028F  000A               	callw
  3046  0290  3182               	pagesel	$
  3047  0291                     i1l184:
  3048  0291  0008               	return
  3049  0292                     __end_of_TMR0_ISR:
  3050                           
  3051                           	psect	text16
  3052  02C0                     __ptext16:	
  3053 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3054 ;; Defined at:
  3055 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		None
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3069 ;;      Params:         0       0       0       0
  3070 ;;      Locals:         0       0       0       0
  3071 ;;      Temps:          0       0       0       0
  3072 ;;      Totals:         0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_TMR0_Initialize
  3079 ;;		_TMR0_ISR
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function _TMR0_DefaultInterruptHandler
  3085  02C0                     _TMR0_DefaultInterruptHandler:
  3086  02C0                     i1l190:	
  3087                           ;incstack = 0
  3088                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  3089                           
  3090  02C0  0008               	return
  3091  02C1                     __end_of_TMR0_DefaultInterruptHandler:
  3092                           
  3093                           	psect	text17
  3094  0292                     __ptext17:	
  3095 ;; *************** function _timerISR *****************
  3096 ;; Defined at:
  3097 ;;		line 95 in file "main.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3111 ;;      Params:         0       0       0       0
  3112 ;;      Locals:         0       0       0       0
  3113 ;;      Temps:          0       0       0       0
  3114 ;;      Totals:         0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;;		_TMR0_ISR
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _timerISR
  3127  0292                     _timerISR:
  3128  0292                     i1l1226:	
  3129                           ;incstack = 0
  3130                           ; Regs used in _timerISR: [wreg]
  3131                           
  3132                           
  3133                           ;main.c: 97:     ledCount++;
  3134  0292  3001               	movlw	1
  3135  0293  0140               	movlb	0	; select bank0
  3136  0294  07A6               	addwf	_ledCount,f
  3137  0295  3000               	movlw	0
  3138  0296  3DA7               	addwfc	_ledCount+1,f
  3139                           
  3140                           ;main.c: 98:     blinkCount++;
  3141  0297  3001               	movlw	1
  3142  0298  07A4               	addwf	_blinkCount,f
  3143  0299  3000               	movlw	0
  3144  029A  3DA5               	addwfc	_blinkCount+1,f
  3145                           
  3146                           ;main.c: 99:     buttonCount++;
  3147  029B  3001               	movlw	1
  3148  029C  07A2               	addwf	_buttonCount,f
  3149  029D  3000               	movlw	0
  3150  029E  3DA3               	addwfc	_buttonCount+1,f
  3151  029F                     i1l279:
  3152  029F  0008               	return
  3153  02A0                     __end_of_timerISR:
  3154  007E                     btemp	set	126	;btemp
  3155  007E                     int$flags	set	126
  3156  007E                     wtemp0	set	126
  3157                           
  3158                           	psect	config
  3159                           
  3160                           ;Config register CONFIG1 @ 0x8007
  3161                           ;	External Oscillator Mode Selection bits
  3162                           ;	FEXTOSC = OFF, Oscillator not enabled
  3163                           ;	Power-up Default Value for COSC bits
  3164                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  3165                           ;	Clock Out Enable bit
  3166                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3167                           ;	VDD Range Analog Calibration Selection bit
  3168                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3169  8007                     	org	32775
  3170  8007  3FED               	dw	16365
  3171                           
  3172                           ;Config register CONFIG2 @ 0x8008
  3173                           ;	Master Clear Enable bit
  3174                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3175                           ;	Power-up Timer Selection bits
  3176                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3177                           ;	WDT Operating Mode bits
  3178                           ;	WDTE = NSLEEP, WDT enabled while Sleep = 0, suspended when Sleep = 1; SEN is ignored
  3179                           ;	Brown-out Reset Enable bits
  3180                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3181                           ;	Brown-out Reset Voltage Selection bit
  3182                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3183                           ;	PPSLOCKED One-Way Set Enable bit
  3184                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3185                           ;	Stack Overflow/Underflow Reset Enable bit
  3186                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3187  8008                     	org	32776
  3188  8008  3FF7               	dw	16375
  3189                           
  3190                           ;Config register CONFIG4 @ 0x800A
  3191                           ;	Boot Block Size Selection bits
  3192                           ;	BBSIZE = BB512, 512 words boot block size
  3193                           ;	Boot Block Enable bit
  3194                           ;	BBEN = OFF, Boot Block is disabled
  3195                           ;	SAF Enable bit
  3196                           ;	SAFEN = OFF, SAF is disabled
  3197                           ;	Application Block Write Protection bit
  3198                           ;	WRTAPP = OFF, Application Block is not write-protected
  3199                           ;	Boot Block Write Protection bit
  3200                           ;	WRTB = OFF, Boot Block is not write-protected
  3201                           ;	Configuration Registers Write Protection bit
  3202                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3203                           ;	Storage Area Flash (SAF) Write Protection bit
  3204                           ;	WRTSAF = OFF, SAF is not write-protected
  3205                           ;	Low Voltage Programming Enable bit
  3206                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3207  800A                     	org	32778
  3208  800A  3FFF               	dw	16383
  3209                           
  3210                           ;Config register CONFIG5 @ 0x800B
  3211                           ;	User Program Flash Memory Code Protection bit
  3212                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3213  800B                     	org	32779
  3214  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         13
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      23
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> buttonISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1194
                                              9 COMMON     5     5      0
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            ___awdiv
                      _processButton
 ---------------------------------------------------------------------------------
 (1) _processButton                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _buttonISR *
 ---------------------------------------------------------------------------------
 (6) _buttonISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (6) _timerISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___awdiv
   _processButton

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _buttonISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      17       5       28.7%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      25      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      25      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 24 10:57:52 2021

        __end_of_TMR2_SetInterruptHandler 02AC                                        l58 0228  
                                      l96 023F                              ___awdiv@sign 0076  
                                     l211 0263                                       l214 02B6  
                                     l302 020E                                       l217 02BE  
                                     l139 02AB                                       l165 0253  
                                     l187 02B1                                       l523 01B0  
                                     _RA5 0065                                       u410 0192  
                                     u330 01C0                                       u411 0191  
                                     u331 01BF                                       u340 01DE  
                                     u500 005B                                       u405 0184  
                                     u341 01DD                                       u501 005A  
                                     u430 01A2                                       u350 0157  
                                     u510 006C                                       _PR2 028D  
                                     u431 01A1                                       u415 018E  
                                     u351 0156                                       u335 01BC  
                                     u511 006B                                       u440 01A7  
                                     u360 0162                                       u441 01A6  
                                     u425 0198                                       u361 0161  
                                     u345 01DA                                       u370 0173  
                                     u530 00A4                                       u371 0172  
                                     u531 00A3                                       u515 0068  
                                     u540 00B6                                       u541 00B5  
                                     u525 0073                                       u390 0183  
                                     u391 0182                                       u535 00A0  
                                     u385 0177                                       u545 00B2  
                                     u570 011C                                       u571 011B  
                                     u555 00C2                                       u564 00EF  
                                     u565 00ED                                       u575 0118  
                                     u585 0123                           _TMR2_Initialize 0229  
                                     wreg 0009                                      l1200 022F  
                                    l1210 0240                                      l1202 0232  
                                    l1220 0250                                      l1212 0245  
                                    l1204 0234                                      l1300 0152  
                                    l1222 02B2                                      l1214 0246  
                                    l1206 0235                                      l1310 0162  
                                    l1302 0153                                      l1216 0248  
                                    l1208 023C                                      l1224 02BB  
                                    l1320 0176                                      l1312 0167  
                                    l1304 0157                                      l1170 020F  
                                    l1218 0249                                      l1250 0257  
                                    l1330 0196                                      l1322 017B  
                                    l1314 016B                                      l1306 015C  
                                    l1180 021A                                      l1172 0212  
                                    l1252 025A                                      l1340 01AC  
                                    l1332 0197                                      l1324 017F  
                                    l1316 016D                                      l1308 015E  
                                    l1260 01B3                                      l1190 0221  
                                    l1182 021B                                      l1174 0214  
                                    l1166 02A6                                      l1254 025D  
                                    l1334 019C                                      l1326 0183  
                                    l1318 0173                                      l1270 01CD  
                                    l1192 0223                                      l1184 021C  
                                    l1176 0215                                      l1168 02AC  
                                    l1256 0260                                      l1248 0254  
                                    l1328 0192                                      l1336 01A2  
                                    l1272 01DE                                      l1264 01C1  
                                    l1360 0053                                      l1194 0225  
                                    l1186 021D                                      l1178 0217  
                                    l1338 01A7                                      l1290 020B  
                                    l1266 01C3                                      l1258 01B1  
                                    l1370 0093                                      l1362 0055  
                                    l1188 021F                                      l1196 0229  
                                    l1268 01C8                                      l1276 01E4  
                                    l1380 00CE                                      l1372 0096  
                                    l1364 005B                                      l1356 0041  
                                    l1198 022E                                      l1278 01F5  
                                    l1390 00F9                                      l1382 00DE  
                                    l1374 00A4                                      l1366 005F  
                                    l1358 0052                                      l1288 01FA  
                                    l1464 0146                                      l1392 011C  
                                    l1384 00E1                                      l1376 00B6  
                                    l1368 006C                                      l1466 01EA  
                                    l1394 012F                                      l1386 00E6  
                                    l1378 00BB                                      l1468 0200  
                                    l1388 00F5                                      l1398 0140  
                                    _LATA 0018                                      _LATC 001A  
                                    _T2PR 028D                                      i1l24 0023  
                                    i1l25 0023                                      i1l19 0013  
                                    _TMR2 028C                                      _WPUA 1F39  
                                    _WPUC 1F4F                                      _main 0041  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                                    start 0025                   __end_of_TMR0_Initialize 0254  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0005  
           __end_of_OSCILLATOR_Initialize 02B7                                     ?_main 0070  
                         __end_of___awdiv 01B1                           ___awdiv@divisor 0070  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     i1l142 02BF  
                                   i1l136 0282                                     _T2RST 0291  
                                   i1l190 02C0                                     i1l184 0291  
                                   i1l284 0273                                     i1l279 029F  
                         ___awdiv@counter 0075                                     _OSCEN 0891  
                                   u30_20 026A                                     u30_21 0269  
                                   u31_20 028C                                     u31_21 028B  
                                   u32_20 027D                                     u32_21 027C  
                                   _TMR0H 059D                                     _TMR0L 059C  
                                   _PORTA 000C                                     _PORTC 000E  
                                   u45_20 000B                                     u45_21 000A  
                                   u46_20 000F                                     u46_21 000E  
                                   u47_20 0017                                     u47_21 0016  
                                   u48_20 001B                                     u48_21 001A  
                                   u49_20 001F                                     u49_21 001E  
                                   _TRISA 0012                                     _TRISC 0014  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0070  
                        __end_of_TMR0_ISR 0292                          __end_of_TMR2_ISR 0283  
                         ??_processButton 0070                            _WDT_Initialize 02BB  
                                   main@i 0035                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __initialization 0026                              __end_of_main 0152  
                 __end_of_TMR2_Initialize 0240               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 02A6                                    ??_main 0079  
                  __end_of_WDT_Initialize 02BF                          ___awdiv@dividend 0072  
                                  _ANSELA 1F38                                    _ANSELC 1F4E  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  i1l1230 026A                                    i1l1240 028C  
                                  i1l1232 026D                                    i1l1226 0292  
                                  i1l1234 0271                                    i1l1242 0274  
                                  i1l1236 0283                                    i1l1228 0264  
                                  i1l1244 0276                                    i1l1238 0285  
                                  i1l1246 027D                                    i1l1350 0017  
                                  i1l1352 001B                                    i1l1344 0006  
                                  _ODCONA 1F3A                                    i1l1354 001F  
                                  i1l1346 000B                                    _ODCONC 1F50  
                                  i1l1348 000F                                    _INLVLA 1F3C  
                                  _INLVLC 1F52                                    _OSCFRQ 0893  
                                  _WDTCON 080C                                 ??___awdiv 0074  
                                  _ledReg 0033                          ?_TMR0_Initialize 0070  
                        ___awdiv@quotient 0077                          __end_of_timerISR 02A0  
                         ?_WDT_Initialize 0070  TMR0_SetInterruptHandler@InterruptHandler 0070  
TMR2_SetInterruptHandler@InterruptHandler 0070                         _SYSTEM_Initialize 0254  
                 __end_of__initialization 003E                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK0 02B7  
                     ??_SYSTEM_Initialize 0072                                 ?_TMR0_ISR 0070  
                               ?_TMR2_ISR 0070                          ?_TMR2_Initialize 0070  
               __end_of_SYSTEM_Initialize 0264                                __pbssBANK0 0020  
                      __size_of_buttonISR 0010                                __pmaintext 0041  
                              _blinkCount 0024          __end_of_TMR0_SetInterruptHandler 02B2  
                              ??_TMR0_ISR 0070                                ??_TMR2_ISR 0070  
                              __pintentry 0004                                   _T2INPPS 1E9C  
                                 _OSCTUNE 0892                                   _SLRCONA 1F3B  
                                 _SLRCONC 1F51                ??_TMR2_SetInterruptHandler 0072  
                               ?_timerISR 0070                                   ___awdiv 0152  
                              _buttonFlag 002C                                   __ptext1 01B1  
                                 __ptext2 0152                                   __ptext3 0254  
                                 __ptext4 02BB                                   __ptext5 0229  
                                 __ptext6 02A6                                   __ptext7 0240  
                                 __ptext8 02AC                                   __ptext9 020F  
                       __end_of_buttonISR 0274                     _OSCILLATOR_Initialize 02B2  
                               _T2CONbits 028E                  ??_PIN_MANAGER_Initialize 0070  
                               _T2HLTbits 028F                __size_of_SYSTEM_Initialize 0010  
                                 clrloop0 02A1                     __end_of_processButton 020F  
                    end_of_initialization 003E                                 _T2RSTbits 0291  
                              ??_timerISR 0070                          ??_WDT_Initialize 0070  
                _TMR0_SetInterruptHandler 02AC      __end_of_TMR2_DefaultInterruptHandler 02C0  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 02BF  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0026  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 001A  
                          _buttonDuration 0020                               __pdataBANK0 0031  
           ?_TMR2_DefaultInterruptHandler 0070                                 ___latbits 0000  
                           __pcstackBANK0 0035                  __size_of_TMR2_Initialize 0017  
                   _TMR0_InterruptHandler 002D                                 __pnvBANK0 002D  
                  _PIN_MANAGER_Initialize 020F                                 _gameState 0028  
                                ?___awdiv 0070                         __size_of_timerISR 000E  
                               _ledPeriod 0031              ??_INTERRUPT_InterruptManager 0070  
                               _buttonISR 0264                                  _T2CLKCON 0290  
                       ??_TMR0_Initialize 0072                                 clear_ram0 02A0  
                                _PIE0bits 0716                                  _PIE1bits 0717  
     __size_of_INTERRUPT_InterruptManager 0021                ??_TMR0_SetInterruptHandler 0072  
                                _PIR0bits 070C                                  _PIR1bits 070D  
                                _TMR0_ISR 0283                                  _TMR2_ISR 0274  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0006  
               ?_TMR2_SetInterruptHandler 0070                                ?_buttonISR 0070  
                       ??_TMR2_Initialize 0072                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___awdiv 005F                    __size_of_processButton 005E  
                             _buttonCount 0022                                _T0CON0bits 059E  
                                __ptext10 02B2                                  __ptext12 0274  
                                __ptext13 02BF                                  __ptext14 0264  
                                __ptext15 0283                                  __ptext16 02C0  
                                __ptext17 0292                                  _ledCount 0026  
                           __size_of_main 0111      __end_of_TMR0_DefaultInterruptHandler 02C1  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 02C0  
                                _timerISR 0292                                  _speedReg 002A  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0025  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                             ??_buttonISR 0070                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                             _processButton 01B1  
                 ?_PIN_MANAGER_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                         _TMR0_Initialize 0240                            ?_processButton 0070  
          __end_of_PIN_MANAGER_Initialize 0229                     _TMR2_InterruptHandler 002F  
